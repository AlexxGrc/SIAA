@model SIAAPI.Models.CartaPorte.Propietario

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var idpais = ViewBag.ListPais as List<SelectListItem>;
    var idestado = ViewBag.ListEstado as List<SelectListItem>;
    var idmunicipio = ViewBag.ListMunicipio as List<SelectListItem>;
    var idlocalidad = ViewBag.ListLocalidad as List<SelectListItem>;
    var idcolonia = ViewBag.IDColonia as List<SelectListItem>;
}

<script defer src="~/Scripts/cascade.combo.js"></script>
<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Propietario</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDPropietario)
        @Html.HiddenFor(model => model.c_Pais)
        @Html.HiddenFor(model => model.c_Estado)
        @Html.HiddenFor(model => model.c_Municipio)
        @Html.HiddenFor(model => model.c_Localidad)
        @Html.HiddenFor(model => model.c_Colonia)

        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.RFCPropietario, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RFCPropietario, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RFCPropietario, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.NombrePropietario, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NombrePropietario, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NombrePropietario, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.NumRegIdTribPropietario, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.NumRegIdTribPropietario, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumRegIdTribPropietario, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.ResidenciaFiscal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownList("ResidenciaFiscal", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ResidenciaFiscal, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            @*PAIS/ ESTADO*@
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDPais, "País", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IDPais, idpais, new
                   {
                       @class = "form-control",
                       data_cascade_combo = "#IDEstado",
                       data_cascade_combo_source = Url.Action("getJsonEstadoPorPais", "Propietario"),
                       data_cascade_combo_param_name = "id"
                   })
                    </div>
                </div>
            </div>
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDEstado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                    *<div class="col-md-10">
                        @Html.DropDownListFor(model => model.IDEstado, idestado, new
                   {
                       @class = "form-control",
                       @onchange = "actualizacomboLocalidad()",
                       data_cascade_combo = "#IDMunicipio",
                       data_cascade_combo_source = Url.Action("getJsonMunicipioPorEstado", "Propietario"),
                       data_cascade_combo_param_name = "id"
                   })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            @*MUNICIPIO / LOCALIDAD*@
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDMunicipio, "Municipio", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IDMunicipio, idmunicipio, new
                   {
                       @class = "form-control",
                       id = "IDMunicipio"
                   })
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDLocalidad, "Localidad", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IDLocalidad, idlocalidad, new { @class = "form-control", @name = "IDLocalidad", @id = "IDLocalidad" })

                        @Html.ValidationMessageFor(model => model.IDLocalidad, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            @*COLONIA/ REFERENCIA*@
            <div class="col col-md-6 col-sm-1">

                <div class="form-group">
                    @Html.LabelFor(model => model.CP, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.CP, new { htmlAttributes = new { @class = "form-control", @onchange = "actualizacombo()" } })
                        @Html.ValidationMessageFor(model => model.CP, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDColonia, "Colonia", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IDColonia, idcolonia, new { @class = "form-control", @name = "IDColonia", @id = "IDColonia" })
                        @Html.ValidationMessageFor(model => model.IDColonia, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Calle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Calle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Calle, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col col-md-3 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.NumExt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NumExt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumExt, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col col-md-3 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.NumInt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NumInt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumInt, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Referencia, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Referencia, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Referencia, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Activo)
                            @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Grabar" class="btn btn-success btn-xs" /> | @Html.ActionLink("Regresar a la lista", "Index", null, new { @class = "btn btn-default btn-xs" })

            </div>
        </div>
    </div>

}

<p>

</p>




<script type="text/javascript">

    function actualizacombo() {


    var control = "#CP";
    var selectcontrol = "#IDColonia";
        $(selectcontrol).empty();

        $.ajax({
              type: 'GET',
                url: '@Url.Action("getColonias")',
                dataType: 'json',
                data: { buscar: $(control).val() },
                success: function (colonias) {

                    for (i = 0; i < colonias.length; i++)
                    {
                        var Value = colonias[i].Value;

                        var Text = colonias[i].Text;
                        var select = "Selecciona una colonia";
                          $(selectcontrol).append('<option selected value="' + Value + '">' + Text + '</option>');

                    }
                       $(selectcontrol).append('<option selected value="' + 0 + '">' + select + '</option>');
                },
                error: function (ex) {
                    //alert('Falle.' + ex.data);
                }

            });


    }

      function actualizacomboLocalidad() {

    var control = "#IDEstado";
    var selectcontrol = "#IDLocalidad";
        $(selectcontrol).empty();

        $.ajax({
              type: 'GET',
                url: '@Url.Action("getLocalidades")',
                dataType: 'json',
                data: { buscar: $(control).val() },
                success: function (localidades) {

                    for (i = 0; i < localidades.length; i++)
                    {
                        var Value = localidades[i].Value;

                        var Text = localidades[i].Text;
                        var select = "Selecciona una localidad";
                          $(selectcontrol).append('<option selected value="' + Value + '">' + Text + '</option>');

                    }
                       $(selectcontrol).append('<option selected value="' + 0 + '">' + select + '</option>');
                },
                error: function (ex) {
                    //alert('Falle.' + ex.data);
                }

            });


    }


</script>
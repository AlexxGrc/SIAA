@model SIAAPI.Models.Comercial.Familia

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Editar Familia de Atributos</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDFamilia)

        <div class="form-group">
            @Html.LabelFor(model => model.CCodFam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CCodFam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CCodFam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.IDProdServ, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IDProdServ, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IDProdServ, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.IDProdServ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.IDProdServ, ViewBag.ListaDescripcion as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDProdServ, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IDClaveSTCC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.IDClaveSTCC, ViewBag.ListaProdSTCC as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDClaveSTCC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FactorMinimoGanancia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
               @Html.EditorFor(model => model.FactorMinimoGanancia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FactorMinimoGanancia, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IDTipoArticulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("IDTipoArticulo", null, htmlAttributes: new { @class = "form-control" })
                @*@Html.DropDownListFor("IDTipoArticulo", ViewBag.IDTipoArticulo as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.IDTipoArticulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Grabar" class="btn btn-success btn-xs" /> | @Html.ActionLink("Regresar a la lista", "Index", null, new { @class = "btn btn-default btn-xs" })
            </div>
        </div>
    </div>
}

@model  SIAAPI.Models.Administracion.Configuracion

@{
    ViewBag.Title = "EditarConfiguracion";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Configuracion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Timbrado Remoto de INI: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SIAAPI_com_multifacturas_pac1_Timbrado_Remoto_de_INI, new { htmlAttributes = new { @class = "form-control", @id= "SIAAPI_com_multifacturas_pac1_Timbrado_Remoto_de_INI", @name="SIAAPI_com_multifacturas_pac1_Timbrado_Remoto_de_INI" } })
                @Html.ValidationMessageFor(model => model.SIAAPI_com_multifacturas_pac1_Timbrado_Remoto_de_INI, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Correo Firma Factura:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CorreofirmaFactura, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CorreofirmaFactura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Timbrar Prueba:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimbrarPrueba, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TimbrarPrueba, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Nombre de Aplicacion:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombredelaaplicacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombredelaaplicacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Valor IVA:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorIVA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorIVA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("ID de Proveedor:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IDProveedorDesconocido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDProveedorDesconocido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Rango 1:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rango1gain, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rango1gain, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Rango 2:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rango2gain, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rango2gain, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Rango 3:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rango3gain, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rango3gain, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Rango 4:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rango4gain, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rango4gain, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Costo M2 default:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CostoM2default, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CostoM2default, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Costo de empaque:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.costodeempaque, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.costodeempaque, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Pagina Oficial:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.paginaoficial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.paginaoficial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Eslogan", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Eslogan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Eslogan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Color de Reporte:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ColorReporte, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ColorReporte, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Cotizador:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TCcotizador, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TCcotizador, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Color de Fuente Encabezado:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ColorFuenteEncabezado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ColorFuenteEncabezado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Atributo Gapje:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AtributoGapje, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AtributoGapje, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Atributo Gap Avance:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AtributoGapAvance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AtributoGapAvance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Atributo Cavidades Eje:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AtributoCavidadesEje, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AtributoCavidadesEje, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Atributo Eje:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AtributoEje, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AtributoEje, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Atributo Avance:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AtributoAvance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AtributoAvance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Atributo Ancho Cinta:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AtributoAnchoCinta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AtributoAnchoCinta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Atributo Ancho Cinta Impresa:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AtributoAnchoCintaImpresa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AtributoAnchoCintaImpresa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Factor costo indirecto:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.factorcostoindirecto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.factorcostoindirecto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Grabar" class="btn btn-success" />
            </div>
        </div>
    </div>
}


@*@model IEnumerable<SIAAPI.Models.Cfdi.Encfacturas>*@
<globalization uiCulture="auto" culture="auto" />
@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>

@*@model PagedList.IPagedList<SIAAPI.Models.Cfdi.Encfacturas>*@
@model PagedList.IPagedList<SIAAPI.Models.Cfdi.EncfacturasSaldos>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
    ViewBag.Title = "IndexAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Facturas</h3>
<hr />

<meta name="googlebot" content="noindex, nofollow, nosnippet, noimageindex">
<meta name="robots" content="noindex, nofollow, nofollow, nosnippet, noimageindex">
<meta name="googlebot-news" content="noindex, nofollow, nosnippet, noimageindex" />

@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    
                    
                    <table>
                        <tr>
                            <td class="col-lg-2">
                                Elementos por página: @Html.DropDownList("pageSize")

                            </td>
                            <td class="col-lg-2">
                                Facturas: @Html.DropDownList("FacPag", (IEnumerable<SelectListItem>)ViewData["FacPag"], "Todas")
                            </td>
                            <td class="col-lg-1">
                                Serie: @Html.DropDownList("SerieFac", "Todas")
                            </td>
                            <td class="col-lg-5">
                                Cliente: @Html.DropDownList("ClieFac", "Todas")
                            </td>
                            <td class="col-lg-2">
                                Estado: @Html.DropDownList("Estado", "Todas")
                            </td>
                        </tr>
                    </table>
                    <table>
                        <tr>
                            <td class="col-lg-2">
                                Factura: @Html.TextBox("Numero")
                            </td>
                            <td class="col-lg-4">
                                Fecha inicio: @Html.TextBox("Fechainicio", ViewBag.Fechainicio as string, new { type = "date" })

                            </td>
                            <td class="col-lg-4">
                                Fecha final:  @Html.TextBox("Fechafinal", ViewBag.Fechafinal as string, new { type = "date" })
                            </td>
                            <td class="col-lg-2"></td>
                        </tr>
                        <tr>
                            <td><input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span></td>
                            
                            <td></td>


                        </tr>

                        <tr></tr>
                    </table>
                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@



<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <th>
                @Html.ActionLink("Activa", "Index", new { sortOrder = ViewBag.EstadoSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>

            <th>
                @*@Html.DisplayNameFor(model => model.Serie)*@
                @Html.ActionLink("Serie", "Index", new { sortOrder = ViewBag.SerieSortParm, currentFilter = ViewBag.CurrentFilter })


            </th>

            <th>
                @*@Html.DisplayNameFor(model => model.Numero)*@
                @Html.ActionLink("Numero", "Index", new { sortOrder = ViewBag.NumeroSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>

            <th>
                @*@Html.DisplayNameFor(model => model.Fecha)*@
                @Html.ActionLink("Fecha", "Index", new { sortOrder = ViewBag.FechaSortParm, currentFilter = ViewBag.CurrentFilter })


            </th>
            <th>

                @Html.Label("Prefactura")
            </th>
            <th>
                @*Html.DisplayNameFor(model => model.Nombre_Cliente)*@
                @Html.ActionLink("Nombre_Cliente", "Index", new { sortOrder = ViewBag.ClienteSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Subtotal)*@
                @Html.Label("Subtotal")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.IVA)*@
                @Html.Label("IVA")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Total)*@
                @Html.Label("Total")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.UUID)*@
                @Html.Label("Moneda")
            </th>
            @if (@Roles.IsUserInRole("Administrador") || @Roles.IsUserInRole("Sistemas") || @Roles.IsUserInRole("Gerencia") || @Roles.IsUserInRole("GerenteVentas") || @Roles.IsUserInRole("Facturacion"))
            {
                <th>
                    @Html.Label("Importe Pagado")
                </th>
                <th>
                    @Html.Label("Saldo Insoluto")
                </th>
            }
            <th>

            </th>
            <th>

            </th>
            <th>

            </th>


        </tr>

        @foreach (SIAAPI.Models.Cfdi.EncfacturasSaldos item in Model)
        {
    <tr>

        <td>
            @if (item.Estado == "A")
            {
                <a><span class="fa fa-check-circle" style="font-size:16px;color:green"></span></a>
                try
                {
                    if (item.pagada == true)
                    {
                        <a><span class="fa fa-check-circle" style="font-size:16px;color:blueviolet"></span></a>
                    }
                }
                catch (Exception err)
                {

                }
            }
            else
            {
                <a><span class="fa fa-times-circle" style="font-size:16px;color:red"></span></a>
            }

        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Serie)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Numero)
        </td>
        <td>
            @DateTime.Parse(@Html.DisplayFor(modelItem => item.Fecha).ToString()).ToShortDateString()
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Prefactura)

        </td>

        <td>

            @Html.DisplayFor(modelItem => item.Nombre_cliente)
            @if (item.IDCliente == 0)
            {
                <a><span class="fa fa-user-times" style="font-size:16px;color:red"></span></a>
            }
        </td>
        <td align="right">
            @String.Format("{0:C}", item.Subtotal)
            @*@Html.DisplayFor(modelItem => item.Subtotal)*@
        </td>
        <td align="right">

            @String.Format("{0:C}", item.IVA)
            @*@Html.DisplayFor(modelItem => item.IVA)*@
        </td>
        <td align="right">
            @String.Format("{0:C}", item.Total)
            @*@Html.DisplayFor(modelItem => item.Total)*@
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Moneda)
        </td>
        @if (@Roles.IsUserInRole("Administrador") || @Roles.IsUserInRole("Sistemas") || @Roles.IsUserInRole("Gerencia") || @Roles.IsUserInRole("GerenteVentas"))
        {
            <td align="right">

                @String.Format("{0:C}", item.ImportePagado)
            </td>
            <td align="right">
                @String.Format("{0:C}", item.ImporteSaldoInsoluto)
            </td>
        }

        @{ try
            {
                SIAAPI.Models.CartaPorte.FacturaComplementoCartasP cartasP = new SIAAPI.Models.CartaPorte.FacturaCartaPorteContext().Database.SqlQuery<SIAAPI.Models.CartaPorte.FacturaComplementoCartasP>("select*from FacturaComplementoCartasP where  estado='A' and idfacturaviene=" + item.ID).ToList().FirstOrDefault();

                if (cartasP != null)
                {
                    <td>
                        @Html.ActionLink("PDF", "PDFCartaP", new { id = cartasP.ID }, new { @class = "btn btn-info btn-xs" })

                    </td>
                    <td>
                        @Html.ActionLink("Cancelar", "CancelarMotivo", new { id = cartasP.ID , Viene="CartaP"}, new { @class = "btn btn-danger btn-xs" })

                    </td>
                }
                else
                {
                    <td>
                        @Html.ActionLink("Crear Carta Porte", "CrearCartaP", new { id = item.ID }, new { @class = "btn btn-warning btn-xs" })
                    </td>
                }
            }
            catch (Exception err)
            {

            }



        }
        @*<td>
            @Html.ActionLink("PDF", "DescargarPdf", new { id = item.ID }, new { @class = "btn btn-primary btn-xs" })
        </td>*@


    </tr>


                    }
    </table>
</div>
<br />
<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <th class="col-lg-1">
                Moneda Origen
            </th>
            <th class="col-lg-1">
                Subtotal
            </th>
            <th class="col-lg-1">
                IVA
            </th>
            <th class="col-lg-1">
                Total
            </th>
            <th class="col-lg-1">
                Total en Pesos Mexicanos
            </th>
        </tr>
        @foreach (var itemresumen in ViewBag.sumatoria)
        {

            <tr>
                <td class="col-lg-1">
                    @itemresumen.MonedaOrigen
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.Subtotal)
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.IVA)
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.Total)
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.TotalenPesos)
                </td>

            </tr>
        }
    </table>
</div>

@*Paginación*@
@using (Html.BeginForm("FacturasCartaPorte", "FacturaAll", FormMethod.Get, new { id = "pageSizeForm" }))
{
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("FacturasCartaPorte", new
   {
       page,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       SerieFac = ViewBag.SerieFacseleccionado,
       ClieFac = ViewBag.ClieFacseleccionado,
       FacPag = ViewBag.ClieFacseleccionado,
       Estado = ViewBag.Estadoseleccionado,
       Factura = ViewBag.Factura,
       Numero = ViewBag.Numero,
       Fechainicio = ViewBag.Fechainicio,
       FechaFinal = ViewBag.Fechafinal,
       pageSize = ViewBag.psize
   }))


    </div>
}




@*Paginación*@

<script src="~/Scripts/libs/salert/sweetalert.min.js"></script>

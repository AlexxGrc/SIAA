@*@model IEnumerable<SIAAPI.Models.Inventarios.AjustesAlmacen>*@
@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Inventarios.AjustesAlmacen>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
            ViewBag.Title = "Index";
            Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Ajustes de Almacen</h3>
<hr />

@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <p>
                        @Html.ActionLink("Crea un nuevo registro", "Create", null, new { @class = "btn btn-warning btn-xs" }) |
                        Elementos por página: @Html.DropDownList("pageSize")  |
                        Filtro: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = " Introduce el texto a buscar:" })
                        <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span>
                        <a class="btn btn-info btn-xs" href="@Url.Action("EntreFechasAI")">Excel</a>
                    </p>
                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@



<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.FechaAjuste)*@
            @Html.ActionLink("FechaAjuste", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Almacen.Descripcion)*@
            @Html.ActionLink("IDAlmacen", "Index", new { sortOrder = ViewBag.AlmacenSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Articulo.Cref)*@ 
            @Html.ActionLink("IDArticulo", "Index", new { sortOrder = ViewBag.ArticuloSortParm, currentFilter = ViewBag.CurrentFilter })
            
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Caracteristica.Presentacion)*@
            @Html.ActionLink("IDCaracteristica", "Index", new { sortOrder = ViewBag.CaracteristicaSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Lote)*@
            @Html.Label("Lote")
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Cantidad)*@
            @Html.Label("Cantidad")
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.TipoOperacion)*@
            @Html.Label("Operación")
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.IDUser)*@
            @Html.Label("Usuario")
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Observacion)*@
            @Html.Label("Observación")
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FechaAjuste)
         
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Almacen.Descripcion)
            
        </td>
        <td>
            @{
                SIAAPI.Models.Comercial.Articulo art = new SIAAPI.Models.Comercial.ArticuloContext().Articulo.Find(item.IDArticulo);
                DateTime ff = DateTime.Now;
                DateTime fi = DateTime.Now.AddDays(-90);
            }
            @Html.ActionLink(art.Cref, "Kardex", "VMovimientoAlmacen", new { IDAlmacen = item.IDAlmacen, IDArticulo = item.IDArticulo, IDCaracteristica = item.ID, FechaI = fi, FechaF = ff, page = 1, pagesize = 30 }, null)
            
        </td>
        <td>
            @{ 
                SIAAPI.Models.Comercial.Caracteristica caracteristica = new SIAAPI.Models.Comercial.ArticuloContext().Database.SqlQuery<SIAAPI.Models.Comercial.Caracteristica>("select * from Caracteristica where ID=" + item.ID).ToList().FirstOrDefault();
            }
            @caracteristica.Presentacion
            
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Lote)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Cantidad)
        </td>
        <td>
            @if (item.TipoOperacion == SIAAPI.Models.Inventarios.Tipo.Entrada)
            {
             <div>Entrada</div>
            }
            else
            {  <div>Salida</div> }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.User.Username)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Observacion)
        </td>
        @*<td>
            @Html.ActionLink("Editar", "Edit", new { id=item.IDAjuste }) |
            @Html.ActionLink("Detalles", "Details", new { id=item.IDAjuste }) |
            @Html.ActionLink("Eliminar", "Delete", new { id=item.IDAjuste })
        </td>*@
    </tr>
}

</table>

@*Paginación*@
@using (Html.BeginForm("Index", "AjustesAlmacen", FormMethod.Get, new { id = "pageSizeForm" }))
            {
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("Index", new
   {
       page,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       searchString = ViewBag.SearchString,
       pageSize = ViewBag.psize
   }))


    </div>
}
@*Paginación*@

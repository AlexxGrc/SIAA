@*@model IEnumerable<SIAAPI.Models.Inventarios.AjustesAlmacen>*@
@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Inventarios.ValeSalida>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
    ViewBag.Title = "ValesDeSalida";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Vales de salida</h3>
<hr />

@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <p>
                        @Html.ActionLink("Crea un nuevo vale", "ValeSalida", null, new { @class = "btn btn-warning btn-xs" }) |
                        Elementos por página: @Html.DropDownList("pageSize")  |
                        Folio: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = " Introduce el texto a buscar:" })
                        <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span>
                       @* <a class="btn btn-info btn-xs" href="@Url.Action("EntreFechasAI")">Excel</a>*@
                    </p>
                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@


<table class="table">
    <tr>
        <th>
            @Html.Label("Folio")
            @*  @Html.ActionLink("Fecha", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })*@
        </th>
        <th>
            @Html.Label("Fecha")
        </th>
        @*<th>
            @Html.Label("Almacén")
        </th>*@
        <th>
            @Html.Label("Concepto")
        </th>
        <th>
            @Html.Label("Solicito")
        </th>
        <th>
            @Html.Label("Estado")
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        string color = "success";
        if (item.Estado.Equals("Cancelado"))
        {
            color = "danger";
        }
       
        if (item.Estado.Equals("Inactivo"))
        {
            color = "default";
        }


        SIAAPI.Models.Comercial.Almacen art = new SIAAPI.Models.Comercial.AlmacenContext().Almacenes.Find(item.IDAlmacen);
        DateTime ff = DateTime.Now;
        DateTime fi = DateTime.Now.AddDays(-90);

        <tr class="@color">
            <td>
                @Html.DisplayFor(modelItem => item.IDValeSalida)

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha)

            </td>
            @*<td>
                @Html.DisplayFor(modelItem => art.Descripcion)

            </td>*@
            <td>

                @Html.DisplayFor(modelItem => item.Concepto)
            </td>

            <td>

                @Html.DisplayFor(modelItem => item.Solicito)
            </td>
            <td>

                @Html.DisplayFor(modelItem => item.Estado)
            </td>
            <td>
                @Html.ActionLink("Detalles", "DetailsVales", new { id = item.IDValeSalida }, new { @class = "btn btn-info btn-xs" })
                @if (item.Estado == "Activo")
                {
                    @Html.ActionLink("PDF", "PdfVale", new { id = item.IDValeSalida }, new { @class = "btn btn-primary btn-xs" })
                }
                @if (item.Estado == "Inactivo")
                {
                    List<SIAAPI.Models.Login.User> userid = new SIAAPI.Models.Administracion.BancoEmpresaContext().Database.SqlQuery<SIAAPI.Models.Login.User>("select * from [dbo].[User] where Username='" + User.Identity.Name + "'").ToList();
                    int usuario = userid.Select(s => s.UserID).FirstOrDefault();

                    if (usuario== 21 || usuario == 27 || usuario==15)
                    {
                        @Html.ActionLink("Autorizar", "AutorizarVale", new { id = item.IDValeSalida }, new { @class = "btn btn-warning btn-xs" })

                    }
                 }

                    @{
                        if (item.Estado != "Cancelado")
                        {
                            @Html.ActionLink("Cancelar", "CancelarVale", new { id = item.IDValeSalida }, new { @class = "btn btn-danger btn-xs" })

                        }
                    }

                </td>
        </tr>
    }

</table>

@*Paginación*@
@using (Html.BeginForm("ValesDeSalida", "AjustesAlmacen", FormMethod.Get, new { id = "pageSizeForm" }))
{
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("ValesDeSalida", new
   {
       page,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       searchString = ViewBag.SearchString,
       pageSize = ViewBag.psize
   }))


    </div>
}
@*Paginación*@

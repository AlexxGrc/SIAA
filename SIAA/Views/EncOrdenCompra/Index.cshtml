@*@model IEnumerable<SIAAPI.Models.Comercial.EncRequisiones>*@

@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>

@model PagedList.IPagedList<SIAAPI.Models.Comercial.VOrdenCompra>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav class="navbar navbar-default">
    <div class="container-fluid">

        <div class="form-group">
            @{
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        <div>
                            <table>
                                <tr>
                                    <td>  <h3>Órdenes de compra</h3> </td>
                                    <td>
                                        <form method="post" action='@Url.Action("DescargarPDFH", "FilePDF", new { ruta = "~/Manual/", name = "SIAAPI_Compras_Orden_de_Compra.pdf" })' target="_blank">
                                            <button class="btn btn-warning btn-xs"><i class="fa fa-question-circle-o fa-lg"></i></button>
                                        </form>
                                    </td>

                                </tr>
                            </table>
                        </div>


                    </div>
                </div>
            }

        </div>

    </div>
</nav>
<br>

@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <div>
                        Elementos por página: @Html.DropDownList("pageSize")
                        Divisa: @Html.DropDownList("Divisa")
                        Estatus: @Html.DropDownList("Status")
                        ID: <i class="fa fa-barcode" style="font-size=6"></i> @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = " Introduce el texto a buscar:" })

                    </div>
                    <div>
                        Proveedor: @Html.DropDownList("Proveedor")
                    </div>
                    <div>
                        <row>
                            Fecha inicio: @Html.TextBox("Fechainicio", ViewBag.Fechainicio as string, new { type = "date" })
                            Fecha final:  @Html.TextBox("Fechafinal", ViewBag.Fechafinal as string, new { type = "date" })
                            <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span>
                            @*<a class="btn btn-info btn-xs" href="@Url.Action("CreaReporteporfecha")">Imprimir Reporte</a> |*@
                            <a class="btn btn-info btn-xs" href="@Url.Action("EntreFechasOC")">Excel</a>
                            <a class="btn btn-info btn-xs" href="@Url.Action("EntreFechasOCvsREC")">Estadísticas de compra</a>

                        </row>
                    </div>

                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@
<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <th>

                @Html.ActionLink("Orden de Compra", "Index", new { sortOrder = ViewBag.OrdenCompraSortParm, currentFilter = ViewBag.CurrentFilter })

            </th>
            <th>
                @Html.Label("Fecha")
            </th>
            <th>
                @Html.Label("Fecha requerida")
            </th>
            <th>

                @Html.ActionLink("Proveedor", "Index", new { sortOrder = ViewBag.ProveedorSortParm, currentFilter = ViewBag.CurrentFilter })

            </th>
            <th>
                @Html.Label("Almacen")
            </th>

            <th>
                @Html.Label("Divisa")
            </th>
            <th>
                @Html.Label("Doc Ant")
            </th>
            <th>
                @Html.Label("Doc Sig")
            </th>
            <th>
                @Html.Label("Tipo de Cambio")
            </th>

            <th>
                @Html.Label("Subtotal")
            </th>
            <th>
                @Html.Label("IVA")
            </th>
            <th>
                @Html.Label("Total")
            </th>


            <th></th>
        </tr>


        @foreach (var item in Model)
        {
             int dato = 0;
            int datoC = 0;
            if (item.EstadoOC.Equals("Cancelado"))
            {
                <tr class="danger">

                    <td class="danger">
                        <div> @Html.DisplayFor(modelItem => item.IDOrdenCompra)</div>
                        <div>@Html.DisplayFor(modelItem => item.EstadoOC)</div>
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Fecha)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FechaRequiere)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Empresa)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Almacen)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ClaveMoneda)
                    </td>
                    <td></td>
                    <td></td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TipoCambio)
                    </td>

                    <td align="right">
                        @String.Format("{0:C}", item.Subtotal)
                    </td>
                    <td align="right">
                        @String.Format("{0:C}", item.IVA)
                    </td>
                    <td align="right">
                        @String.Format("{0:C}", item.Total)
                    </td>



                    <td>
                        @Html.ActionLink("Detalles", "Details", new { id = item.IDOrdenCompra }, new { @class = "btn btn-default btn-xs" })

                    </td>
                </tr>
            }
            else
            {
                <tr>

                    @if (item.EstadoOC.Equals("Activo"))
                    {
                        <td class="success">
                            @Html.DisplayFor(modelItem => item.IDOrdenCompra)
                        </td>
                    }
                    else if (item.EstadoOC.Equals("Inactivo"))
                    {
                        <td class="danger">
                            <div> @Html.DisplayFor(modelItem => item.IDOrdenCompra)</div>
                            <div>@Html.DisplayFor(modelItem => item.EstadoOC)</div>
                        </td>
                    }
                    else if (item.EstadoOC.Equals("Recepcionado"))
                    {
                        <td class="warning">
                            @Html.DisplayFor(modelItem => item.IDOrdenCompra)
                        </td>
                    }
                    else if (item.EstadoOC.Equals("Finalizado"))
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.IDOrdenCompra)
                        </td>
                    }

                    <td>
                        @Html.DisplayFor(modelItem => item.Fecha)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FechaRequiere)
                    </td>

                    @*@Html.DisplayFor(modelItem => item.Empresa)*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Empresa)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Almacen)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ClaveMoneda)
                    </td>
                    <td>
                        @{
                            SIAAPI.clasescfdi.ClsRastreaDA rastrea = new SIAAPI.clasescfdi.ClsRastreaDA();
                            List<SIAAPI.clasescfdi.NodoTrazo> nodos = rastrea.getDocumentoAnterior("Requisicion", item.IDOrdenCompra, "Encabezado");
                            <table>
                                @foreach (SIAAPI.clasescfdi.NodoTrazo nodo in nodos)
                                {
                                    <td style="font-size:x-small">
                                        @nodo.Descripcion
                                    </td>
                                }
                            </table>
                        }
                    </td>
                    <td>
                        @{
                            bool tienRecepcion = false;
                            List<SIAAPI.clasescfdi.NodoTrazo> nodosR = rastrea.getDocumentoAnterior("Recepcion", item.IDOrdenCompra, "Encabezado");
                            <table>
                                @foreach (SIAAPI.clasescfdi.NodoTrazo nodo in nodosR)
                                {
                                    tienRecepcion = true;
                                    <td style="font-size:x-small">
                                        @nodo.Descripcion
                                    </td>
                                }
                            </table>
                        }

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TipoCambio)
                    </td>

                    <td align="right">
                        @String.Format("{0:C}", item.Subtotal)
                    </td>
                    <td align="right">
                        @String.Format("{0:C}", item.IVA)
                    </td>
                    <td align="right">
                        @String.Format("{0:C}", item.Total)
                    </td>



                    <td>
                        @Html.ActionLink("Detalles", "Details", new { id = item.IDOrdenCompra }, new { @class = "btn btn-default btn-xs" })

                        @if (item.EstadoOC.Equals("Inactivo"))
                        {

                            if (@Roles.IsUserInRole("Compras") || (@Roles.IsUserInRole("Administrador") || @Roles.IsUserInRole("Gerencia") || @Roles.IsUserInRole("Facturacion")) && item.EstadoOC.Equals("Inactivo"))
                            {
                                @Html.ActionLink("Autorizar", "Autorizar", new { id = item.IDOrdenCompra }, new { @class = "btn btn-warning btn-xs" })
                            }
                        }


                        @if (item.EstadoOC.Equals("Activo"))
                        {
                            try
                            {
                                SIAAPI.Models.Comercial.ClsDatoEntero clsDatoC = new SIAAPI.Models.Comercial.AlmacenContext().Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoEntero>("select count(IDOrdenC) as Dato from AutorizacionesOC where TipoAutorizacion='Calidad' and idordenc=" + item.IDOrdenCompra).ToList().FirstOrDefault();
                                datoC = clsDatoC.Dato;
                            }
                            catch (Exception err)
                            {

                            }
                            if (datoC != 0)
                            {
                                @Html.ActionLink("Crear Recepción", "OrdenCompra", "EncRecepcion", new { id = item.IDOrdenCompra }, new { @class = "btn btn-success btn-xs" })
                            }
                            @Html.ActionLink("Cancelar", "Cancelar", new { id = item.IDOrdenCompra }, new { @class = "btn btn-danger btn-xs" })
                            @*@Html.ActionLink("Cancelar", "Cancelar", new { id = item.IDOrdenCompra }, new { @class = "btn btn-danger btn-xs" })*@
                            @*@Html.ActionLink("Crear Recepción", "OrdenCompra", "EncRecepcion", new { id = item.IDOrdenCompra }, new { @class = "btn btn-success btn-xs" })*@
                            @Html.ActionLink("Finalizar", "FinalizarOrden", new { id = item.IDOrdenCompra }, new { @class = "btn btn-info btn-xs" })

                            if ((@Roles.IsUserInRole("Administrador") || @Roles.IsUserInRole("Calidad") || @Roles.IsUserInRole("GestionCalidad")))
                            {

                                try
                                {
                                    SIAAPI.Models.Comercial.ClsDatoEntero clsDato = new SIAAPI.Models.Comercial.AlmacenContext().Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoEntero>("select count(IDOrdenC) as Dato from AutorizacionesOC where TipoAutorizacion='OC' and idordenc=" + item.IDOrdenCompra).ToList().FirstOrDefault();
                                    dato = clsDato.Dato;
                                }
                                catch (Exception err)
                                {

                                }
                                if (dato != 0)
                                {
                                    @Html.ActionLink("Autorizar Calidad", "AutorizarC", new { id = item.IDOrdenCompra }, new { @class = "btn btn-warning btn-xs" })

                                }

                            }

                            if ((@Roles.IsUserInRole("Administrador") || @Roles.IsUserInRole("Gerencia") || @Roles.IsUserInRole("Facturacion")) && item.EstadoOC.Equals("Inactivo"))
                            {
                                @Html.ActionLink("Autorizar", "Autorizar", new { id = item.IDOrdenCompra }, new { @class = "btn btn-warning btn-xs" })
                            }
                        }
                        @if (item.EstadoOC.Equals("Recepcionado"))
                        {
                            if (datoC != 0)
                            {
                                @Html.ActionLink("Continuar Recepción", "OrdenCompra", "EncRecepcion", new { id = item.IDOrdenCompra }, new { @class = "btn btn-success btn-xs" })
                            }
                        }
                        @Html.ActionLink("PDF", "PdfOrdenCompra", new { id = item.IDOrdenCompra }, new { @class = "btn btn-primary btn-xs" })
                        </td>
                    <td>
                        @{
                            if (tienRecepcion)
                            {
                                @Html.ActionLink("Historia", "RutaPDF", new { id = item.IDOrdenCompra }, new { @class = "btn btn-warning btn-xs" })
                            }
                        }

                      
                    </td>

                </tr>
            }
        }


    </table>
</div>
<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <th class="col-lg-1">
                Moneda Origen
            </th>
            <th class="col-lg-1">
                Subtotal
            </th>
            <th class="col-lg-1">
                IVA
            </th>
            <th class="col-lg-1">
                Total
            </th>
            <th class="col-lg-1">
                Total en Pesos Mexicanos
            </th>
        </tr>
        @foreach (var itemresumen in ViewBag.sumatoria)
        {

            <tr>
                <td class="col-lg-1">
                    @itemresumen.MonedaOrigen
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.Subtotal)
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.IVA)
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.Total)
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.TotalenPesos)
                </td>

            </tr>
        }
    </table>
</div>
<br />
@*Paginación*@
@using (Html.BeginForm("Index", "EncOrdenCompra", FormMethod.Get, new { id = "pageSizeForm" }))
{
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("Index", new
   {
       page,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       searchString = ViewBag.CurrentFilter,
       pageSize = ViewBag.psize,
       Divisa = ViewBag.DivisaSeleccionado,
       Status = ViewBag.StatusSeleccionado,
       Fechainicio = ViewBag.Fechainicio,
       FechaFinal = ViewBag.Fechafinal,
       Proveedor = ViewBag.ProveedorSeleccionado
   }))

    </div>
}
@*Paginación*@

<script src="~/Scripts/libs/salert/sweetalert.min.js"></script>
<script>

    $(function(){
        $("#Divisa").on("change", function() {
            @ViewBag.DivisaSeleccionado=  $('[id$=Divisa] option:selected').text();

        });
    });

    $(function(){
        $("#Status").on("change", function() {
            @ViewBag.StatusSeleccionado=  $('[id$=Status] option:selected').text();

        });
    });

    $(function(){
        $("#pageSize").on("change", function() {
            @ViewBag.psize=  $('[id$=pageSize] option:selected').text();

        });
    });
    $(function(){
        $("#Provee").on("change", function() {
            @ViewBag.ProveedorSeleccionado=  $('[id$=Provee] option:selected').text();

        });
    });





</script>
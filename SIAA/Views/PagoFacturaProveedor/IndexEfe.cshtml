@*@model IEnumerable<SIAAPI.Models.Cfdi.PagoFacturaProv>*@
<globalization uiCulture="auto" culture="auto" />
@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Cfdi.VPagoFacturaProvEfe>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
    ViewBag.Title = "IndexEfe";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav class="navbar navbar-default">
    <div class="container-fluid">

        <div class="form-group">
            @{
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        <div>
                            <table>
                                <tr>
                                    <td>  <h3>Pago Facturas a Proveedores</h3> </td>
                                    <td>
                                        <form method="post" action='@Url.Action("DescargarPDFH", "FilePDF", new { ruta = "~/Manual/", name = "SIAAPI_Compras_Pagos_Proveedores.pdf" })' target="_blank">
                                            <button class="btn btn-warning btn-xs"><i class="fa fa-question-circle-o fa-lg"></i></button>
                                        </form>
                                    </td>

                                </tr>
                            </table>
                        </div>


                    </div>
                </div>
            }

        </div>

    </div>
</nav>
<br>
<div class="form-group">
    @Html.ActionLink("Pago Electrónico", "Index", null, new { @class = "btn btn-success btn-xs" })
    @Html.ActionLink("Pago Efectivo", "IndexEfe", null, new { @class = "btn btn-success btn-outline btn-xs" })
    @* @Html.ActionLink("Pago Factoraje Financiero", "IndexFac", null, new { @class = "btn btn-success btn-outline btn-xs" })*@
</div>

@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <div>
                        <table>
                            <tr>
                                @Html.ActionLink("Generar Pago", "PagarFacturaProvE", null, new { @class = "btn btn-warning navbar-btn btn-xs" })|
                            </tr>
                            <tr>
                                @Html.ActionLink("Cargar Archivo XML", "CargarPagos", null, new { @class = "btn btn-info navbar-btn btn-xs" })|
                            </tr>
                            <tr>
                                @Html.ActionLink("Validar Proveedores", "ValidarProv", null, new { @class = "btn btn-primary navbar-btn btn-xs" })
                            </tr>

                        </table>

                        <div>

                            @*<a class="btn btn-info btn-xs" href="@Url.Action("CreaReporteEstado")">Reporte por Fecha</a> |
                                <a class="btn btn-info btn-xs" href="@Url.Action("CreaReporteporFecha")">Reporte por Empresa</a> @*|*@
                            @*  <a class="btn btn-info btn-xs" href="@Url.Action("CreaReporteporMoneda")">Reporte por Moneda</a> |*@
                            @*<a class="btn btn-info btn-xs" href="@Url.Action("CreaReporteporFPago")">Reporte por Forma de Pago</a>*@
                            <div>

                                <row>
                                    Factura: @Html.TextBox("FolioP")
                                </row>
                                <row>
                                    Empresa: @Html.DropDownList("Empresa", "Todas")
                                </row>
                                <row>
                                    Estado: @Html.DropDownList("Estado", "Todas")
                                </row>



                                <row>
                                    Fecha: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = "AAAA-MM-DD" })
                                </row>
                                <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span>
                            </div>
                            <div class="dropdown dropright">
                                <button class="btn btn-secondary dropdown-toggle dropdown-toggle-split btn-xs " type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Reportes
                                    <span class="caret"></span>
                                    <span class="sr-only"></span>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    <li> <a class="dropdown-item" href="@Url.Action("EntreFechaSaldoP")">Saldos de proveedores</a></li>
                                </ul>
                            </div>

                        </div>
                    </div>
                    @*<p> .</p>*@


                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@

<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <th>
                Serie
            </th>
            <th>
                @Html.ActionLink("FolioP", "IndexEfe", new { sortOrder = ViewBag.FolioSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("FechaPago", "IndexEfe", new { sortOrder = ViewBag.FechaSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Empresa", "IndexEfe", new { sortOrder = ViewBag.EmpresaSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>

            <th>
                Forma Pago
            </th>
            <th>
                Moneda
            </th>

            <th>
                Monto
            </th>
            <th>
                Estado
            </th>

            <th>
                Observacion
            </th>
            <th>
                PDF
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>

                <td style="display:none;">
                    @Html.HiddenFor(modelItem => item.IDPagoFacturaProv)
                    @Html.HiddenFor(modelItem => item.IDProveedor)
                    @Html.HiddenFor(modelItem => item.Observacion)
                    @Html.HiddenFor(modelItem => item.ClaveFormaPago)
                    @Html.HiddenFor(modelItem => item.ClaveMoneda)

                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.SerieP)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FolioP)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaPago)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Empresa)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.FormaPago)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Moneda)
                </td>
                <td align="right">
                    @String.Format("{0:C}", item.Monto)

                </td>


                <th>
                    @char.Parse(@Html.DisplayFor(modelItem => item.Estado).ToString())
                </th>

                @*<td>
                        @Html.DisplayFor(modelItem => item.Estado)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Observacion)
                </td>
                <td>
                    @Html.ActionLink("Subir PDF", "SubirArchivo", new { id = item.IDPagoFacturaProv }, new { @class = "btn btn-warning navbar-btn btn-xss" })
                </td>
                @if (item.RutaPDF != string.Empty)
                {
                    <td>
                        @Html.ActionLink("Descargar PDF", "DescargarPDFP", new { id = item.IDPagoFacturaProv }, new { @class = "btn btn-warning navbar-btn btn-xss" })
                    </td>
                }
                @if (item.EstadoP.Equals(false))
                {
                    <td>
                        @Html.ActionLink("Documentos Relacionados", "DocumentoRelacionadoProvE", new { idpf = item.IDPagoFacturaProv, idp = item.IDProveedor, nombrep = item.Empresa, monto = item.Monto }, new { @class = "btn btn-info btn-xs" })
                        @Html.ActionLink("Detalles", "DetailsEfe", new { id = item.IDPagoFacturaProv }, new { @class = "btn btn-default btn-xs" })
                        @Html.ActionLink("Eliminar Registro", "EliminaPagoProvE", new { id = item.IDPagoFacturaProv }, new { @class = "btn btn-danger navbar-btn btn-xs" })
                    </td>
                }
                else
                {
                    <td>
                        @Html.ActionLink("Detalles", "DetailsEfe", new { id = item.IDPagoFacturaProv }, new { @class = "btn btn-default btn-xs" })
                    </td>
                    if (item.Estado == "A")
                    {
                        <td>
                            @Html.ActionLink("Cancelar", "CancelaPagoProv", new { id = item.IDPagoFacturaProv }, new { @class = "btn btn-danger btn-xs" })
                        </td>
                    }
                    if (String.IsNullOrEmpty(item.RutaXML))
                    {
                        @*<td>

                                @Html.ActionLink("Timbrar", "TimbrarPago", new { id = item.IDPagoFacturaProv }, new { @class = "btn btn-info btn-xs" })

                            </td>*@
                    }
                    else
                    {
                        <td>
                            @Html.ActionLink("XML", "Descargarxml", new { id = item.IDPagoFacturaProv }, new { @class = "btn btn-warning btn-xs" })
                        </td>
                        <td>
                            @Html.ActionLink("PDF", "DescargarPDF", new { id = item.IDPagoFacturaProv }, new { @class = "btn btn-primary btn-xs" })
                        </td>
                        <td>
                            @Html.ActionLink("Enviar por correo", "EnviarPdf", new { id = item.IDPagoFacturaProv }, new { @class = "btn btn-success btn-xs" })
                        </td>

                    }
                }
                <td>
                    @Html.ActionLink("Documentos", "SubirArchivoPagProv", new { id = item.IDPagoFacturaProv }, new { @class = "btn btn-default btn-xs" })

                </td>
            </tr>
            <tr>
                @{
                    SIAAPI.Models.Cfdi.PagoProvAddContext db = new SIAAPI.Models.Cfdi.PagoProvAddContext();
                    SIAAPI.Models.Comercial.ClsDatoEntero contard = db.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoEntero>("select count(IDPagoFacturaProv) as dato from [dbo].[PagoProvAdd] where IDPagoFacturaProv =" + item.IDPagoFacturaProv).ToList().FirstOrDefault();
                    if (contard.Dato != 0)
                    {
                        List<SIAAPI.Models.Cfdi.PagoProvAdd> doctos = db.Database.SqlQuery<SIAAPI.Models.Cfdi.PagoProvAdd>("select * from [dbo].[PagoProvAdd] where IDPagoFacturaProv = " + item.IDPagoFacturaProv + "").ToList();
                        ViewBag.doctos = doctos;
                        foreach (SIAAPI.Models.Cfdi.PagoProvAdd b in ViewBag.doctos)
                        {
                            <td></td>
                            <td></td>
                            <td style="font-size:x-small">
                                @Html.ActionLink(b.nombreArchivo, "DescargarPDFPagProv", new { id = b.ID }, new { @class = "btn btn-primary btn-xs" })
                                @Html.ActionLink(" ", "EliminarArchivoPagProv", new { id = b.ID }, new { @class = "fa fa-trash", style = "font-size:16px;color:red" })
                            </td>
                        }
                    }
                }
            </tr>
        }

    </table>
</div>

<br />
<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <th class="col-lg-1">
                Moneda Origen
            </th>

            <th class="col-lg-1">
                Total
            </th>

        </tr>
        @foreach (var itemresumen in ViewBag.sumatoria)
        {

            <tr>
                <td class="col-lg-1">
                    @itemresumen.Moneda
                </td>

                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.Total)
                </td>


            </tr>
        }
    </table>
</div>

@*Paginación*@
@using (Html.BeginForm("Index", "PagoFacturaProveedor", FormMethod.Get, new { id = "pageSizeForm" }))
{
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("Index", new
       {
           page,
           sortOrder = ViewBag.CurrentSort,
           currentFilter = ViewBag.CurrentFilter,
           searchString = ViewBag.CurrentFilter,
           pageSize = ViewBag.psize
       }))


    </div>
}
@*Paginación*@




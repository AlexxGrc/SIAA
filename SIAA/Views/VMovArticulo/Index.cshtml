@*@model IEnumerable<SIAAPI.Models.Inventarios.VMovArticulo>*@

@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Inventarios.VMovArticulo>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
            ViewBag.Title = "Index";
            Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Movimiento de Articulos</h3>
<hr />

@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <p>
                        Elementos por página: @Html.DropDownList("pageSize")
                        Filtro: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = " Introduce el texto a buscar:" })
                        <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span> | 
                        @*<a class="btn btn-info  btn-xs" href="@Url.Action("Reporte")">Reporte</a> |*@ 
                        <a class="btn btn-info  btn-xs" href="@Url.Action("CreaReporteporArticulo")">Reporte por fecha</a>

                    </p>
                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@

    <p>
        @*@Html.ActionLink("Crea un nuevo registro", "Create")*@
    </p>
    <div class="table-responsive">
        <table class="table table-striped">
    <thead>
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.Fecha)*@
                @Html.ActionLink("Fecha", "Index", new { sortOrder = ViewBag.FechaSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                Hora
            </th>

            <th>
                @*@Html.DisplayNameFor(model => model.Documento)*@
                @Html.ActionLink("Documento", "Index", new { sortOrder = ViewBag.DocumentoSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.NoDocumento)*@
                No Documento
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.TipoOperacion)*@
                @Html.ActionLink("Tipo Operación", "Index", new { sortOrder = ViewBag.TipoOperacionSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>

            <th>
                @*@Html.DisplayNameFor(model => model.Almacen)*@
                @Html.ActionLink("Almacén", "Index", new { sortOrder = ViewBag.AlmacenSortParm, currentFilter = ViewBag.CurrentFilter })

            </th>


            <th>
                @*@Html.DisplayNameFor(model => model.Descripcion)*@
                @Html.ActionLink("Artículo", "Index", new { sortOrder = ViewBag.DescripcionSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Presentacion)*@
                @Html.ActionLink("Presentación", "Index", new { sortOrder = ViewBag.PresentacionSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Lote)*@
                Lote
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Cantidad)*@
                Cantidad
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Acumulado)*@
                Acumulado
            </th>

            <th></th>
        </tr>
    </thead>

    @foreach (var item in Model)
            {
        <tbody>
            <tr>
                @*<td class="hidden">
                        @Html.HiddenFor(modelItem => item.Accion)
                        @Html.HiddenFor(modelItem => item.IDAlmacen)
                        @Html.HiddenFor(modelItem => item.IDArticulo)
                        @Html.HiddenFor(modelItem => item.IDCaracteristica)
                        @Html.HiddenFor(modelItem => item.Cref)
                        @Html.HiddenFor(modelItem => item.observacion)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Fecha)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hora)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Documento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NoDocumento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TipoOperacion)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Almacen)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Presentacion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lote)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cantidad)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Acumulado)
                </td>

                <td>
                    @* @Html.ActionLink("Editar", "Edit", new { id = item.IDMovimiento }) |*@
                    @Html.ActionLink("Detalles", "Details", new { id = item.IDMovimiento }) |
                    @*@Html.ActionLink("Eliminar", "Delete", new { id = item.IDMovimiento })*@
                </td>
            </tr>
            </tbody>
            }

    </table>

    </div>
    @*Paginación*@
    @using (Html.BeginForm("Index", "VMovArticulo", FormMethod.Get, new { id = "pageSizeForm" }))
            {
        <div class="pager">
            Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

            @Model.Count de @Model.TotalItemCount elementos

            @Html.PagedListPager(Model, page => Url.Action("Index", new
       {
           page,
           sortOrder = ViewBag.CurrentSort,
           currentFilter = ViewBag.CurrentFilter,
           searchString = ViewBag.CurrentFilter,
           pageSize = ViewBag.psize
       }))


        </div>
    }
    @*Paginación*@



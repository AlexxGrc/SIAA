@model SIAAPI.ViewModels.Comercial.ReporteArticulo

@{
    ViewBag.Title = "CreaReporteporArticulo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h3>Imprimir el reporte por Artículo</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Fechainicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Fechainicio, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fechainicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fechafinal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Fechafinal, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fechafinal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDArticulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("IDArticulo", ViewBag.proveedor as List<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDArticulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="caracteristica" style="display:none">
            <div class="form-group">
                @Html.LabelFor(model => model.IDCaracteristica, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">

                    @Html.DropDownList("IDCaracteristica", new SelectList(string.Empty, "Value", "Text"), null, new { @class = "form-control", required = "No se puede generar reporte, sin una característica" })
                    @Html.ValidationMessageFor(model => model.IDCaracteristica, "", new { @class = "text-danger" })
                </div>
            </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Nota, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Nota, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nota, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Generar reporte" class="btn btn-info btn-xs" /> | @Html.ActionLink("Regresar a la lista", "Index", null, new { @class = "btn btn-default btn-xs" })
                </div>
            </div>
        </div>
}

<script src="~/Scripts/libs/jquery_1.10.2/jquery-1.10.2.min.js"></script>
<script type="text/javascript">


    $(document).ready(function () {

        $("#IDArticulo").change(function () {
            $("#IDCaracteristica").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getmetodo")',
                dataType: 'json',
                data: { id: $("#IDArticulo").val() },
                success: function (metodos) {
                    var text = document.getElementById("caracteristica");
                    text.style.display = "block";

                $.each(metodos, function (i, metodo) {
                $("#IDCaracteristica").append('<option value="' + metodo.Value + '">' +
                 metodo.Text + '</option>');
                });
                },
                error: function (ex) {
                }
            });
            return false;
        })
    });

</script>
@*@model IEnumerable<SIAAPI.Models.Produccion.Bitacora>*@

@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Produccion.VBitacora>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutBitacora.cshtml";
}
    <h3>Listado de Bitácora</h3>
    <hr />



@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <p>
                      
                        Elementos por página: @Html.DropDownList("pageSize")  |
                        Escribe no. orden: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = " Escribe la orden:" })
                        <input type="submit" value="Aplicar" class="btn btn-primary navbar-btn btn-xs" /><span class="sr-only">(current)</span>
                    </p>
                }

            </div>
        </form>
    </div>
</nav>
<br>

<table class="table">
    <tr>
        <th>
            @Html.Label("Orden de Producción")
            @*  @Html.DisplayNameFor(model => model.IDOrdenP)*@
        </th>
        <th>
            @Html.Label("Estado Orden")
            @*  @Html.DisplayNameFor(model => model.IDOrdenP)*@
        </th>
        <th>
            @Html.Label("Responsable")
            @* @Html.DisplayNameFor(model => model.IDTrabajador)*@
        </th>
        <th>
            @Html.Label("Fecha de Inicio")
            @*@Html.DisplayNameFor(model => model.FechaInicio)*@
        </th>
        <th>
            @Html.Label("Fecha de Fin")
            @*@Html.DisplayNameFor(model => model.FechaFin)*@
        </th>
        <th>
            @Html.Label("Diferencia de Horas")
            @* @Html.DisplayNameFor(model => model.DiferenciaHoras)*@
        </th>
        <th>
            @Html.Label("Proceso")
            @*@Html.DisplayNameFor(model => model.ReporteDesperfecto)*@
        </th>
        <th>
            @Html.Label("Estado Proceso")
            @*@Html.DisplayNameFor(model => model.ReporteDesperfecto)*@
        </th>
        <th>
            @Html.Label("Estado Bitacora")
            @*@Html.DisplayNameFor(model => model.ReporteDesperfecto)*@
        </th>
        <th>
            @Html.Label("Cantidad")
            @*@Html.DisplayNameFor(model => model.ReporteDesperfecto)*@
        </th>
        <th>
            @Html.Label("Observación")
            @* @Html.DisplayNameFor(model => model.Observacion)*@
        </th>
        <th>
            @Html.Label("Adjunto")
            @*@Html.DisplayNameFor(model => model.ReporteDesperfecto)*@
        </th>

        <th></th>
    </tr>

@{ 





    foreach (SIAAPI.Models.Produccion.VBitacora item in Model) 
    {
        SIAAPI.Models.Produccion.OrdenProduccionContext db = new SIAAPI.Models.Produccion.OrdenProduccionContext();
        //var elemento =   db.Database.ExecuteSqlCommand(Cadena);

        //SIAAPI.Models.Produccion.ClsDatoString finaliza = db.Database.SqlQuery<ClsDatoString>("select (select Descripcion from EstadoOrden where IDEstadoOrden=OrdenProduccionDetalle.IDEstadoOrden) as Dato from OrdenProduccionDetalle where IDOrden=" + ido + " and IDProceso=" + idprocesoanterior + "").ToList()[0];
        var elemento = db.Database.SqlQuery<string>("Select EstadoOrden from OrdenProduccion where idOrden=" + item.IDOrden).FirstOrDefault();

        SIAAPI.Models.Comercial.ClsDatoString estadoProceso = db.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoString>("select Estado as Dato from  [prioridades] where [idorden]=" + item.IDOrden + " and idproceso="+ item.IDProceso).ToList().FirstOrDefault();





    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.IDOrden)
        </td>
        <td>
            @Html.DisplayFor(modelItem => elemento)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Trabajador.Nombre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FechaInicio)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FechaFin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DiferenciaHoras)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Proceso.NombreProceso)
        </td>
        <td>
            @Html.DisplayFor(modelItem => estadoProceso.Dato)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EstadoBitacora)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Cantidad) @Html.DisplayFor(modelItem => item.c_ClaveUnidad.Nombre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Observacion)
        </td>
        <td>

            @{
                SIAAPI.Models.Produccion.OrdenProduccion orden = new SIAAPI.Models.Produccion.OrdenProduccionContext().OrdenesProduccion.Find(item.IDOrden);
                SIAAPI.Models.Comercial.Articulo articulo = new SIAAPI.Models.Comercial.ArticuloContext().Articulo.Find(orden.IDArticulo);



            }



            @if (articulo.nameFoto != null && articulo.nameFoto != "")
            {

                <a href="~/imagenes/Upload/@articulo.nameFoto" class="w3-hover-opacity"><img src="~/imagenes/Upload/@articulo.nameFoto" width="50" height="50"></a>

            }
            else
            {

            }


        </td>

        <td>


            @{
                try
                {


                    //var elemento = new SIAAPI.Models.Produccion.TrabajadorContext().Trabajadores.Single(s => s.Nombre.Equals(User.Identity.Name));
                    if (item.EstadoBitacora == "Iniciada" || item.EstadoBitacora == "Reportada")
                    {
                        @Html.ActionLink("Parcialidad", "FinalizaB", new { id = item.IDBitacora }, new { @class = "btn btn-danger btn-xs" })
                        @Html.ActionLink("Reporte de Incidencia", "ReporteD", new { id = item.IDBitacora }, new { @class = "btn btn-default btn-xs" })
                    }
                    if (item.EstadoBitacora == "Reportada")
                    {
                        @Html.ActionLink("Lista de reportes", "Reportes", new { id = item.IDBitacora }, new { @class = "btn btn-warning btn-xs" })

                    }
                    if (item.EstadoBitacora == "Termianda con Reporte")
                    {
                        @Html.ActionLink("Lista de reportes", "Reportes", new { id = item.IDBitacora }, new { @class = "btn btn-warning btn-xs" })

                    }
                    try
                    {
                        SIAAPI.Models.Comercial.ClsDatoEntero finaliza = new SIAAPI.Models.Produccion.TrabajadorContext().Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoEntero>("select count(IDBitacora)  as Dato from Bitacora  where IDOrden=" + item.IDOrden + " and IDProceso=" + item.IDProceso + " and (EstadoBitacora='Iniciada' or EstadoBitacora='Reportada')").ToList().FirstOrDefault();
                        SIAAPI.Models.Comercial.ClsDatoEntero opcionb = db.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoEntero>("select max(idbitacora) as Dato from bitacora where idproceso=" + item.IDProceso + " and idorden=" + item.IDOrden + " and (EstadoBitacora='Iniciada' or EstadoBitacora='Reportada')").ToList().FirstOrDefault();

                        if (item.IDBitacora == opcionb.Dato)
                        {
                            
                        if (item.EstadoBitacora == "Iniciada" || item.EstadoBitacora == "Reportada" || item.Proceso.NombreProceso == "Igualación y Montaje" || item.Proceso.NombreProceso == "Embobinado" || item.Proceso.NombreProceso == "Prensa" || item.Proceso.NombreProceso == "Impresión de etiqueta" || item.Proceso.NombreProceso == "Diseño" || item.Proceso.NombreProceso == "Sellado" || item.Proceso.NombreProceso == "Inspeccion" || item.Proceso.NombreProceso == "Corte")
                        {
                                @Html.ActionLink("Final", "FinalizaProceso", new { id = item.IDBitacora, idproceso = item.IDProceso }, new { @class = "btn btn-warning btn-xs" })

                         }
                    }

                    }
                catch (Exception err)
                {

                }
            }
            catch (Exception err)
            {

            }
            }


        </td>
    </tr>
                    }
                }
</table>

@using (Html.BeginForm("Index", "Bitacora", FormMethod.Get, new { id = "pageSizeForm" }))
            {
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("Index", new
   {
       page,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       SearchString = ViewBag.CurrentFilter,
       pageSize = ViewBag.psize,
       
       idproceso = ViewBag.idproceso
   }))


    </div>
}
@*Paginación*@

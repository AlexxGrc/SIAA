@*@model IEnumerable<SIAAPI.Models.Comercial.Proveedor>*@
@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Comercial.VProveedores>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav class="navbar navbar-default">
    <div class="container-fluid">

        <div class="form-group">
            @{
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        <div>
                            <table>
                                <tr>
                                    <td>  <h3>Proveedores</h3> </td>
                                    <td>
                                        <form method="post" action='@Url.Action("DescargarPDFH", "FilePDF", new { ruta = "~/Manual/", name = "SIAAPI_Proveedores.pdf" })' target="_blank">
                                            <button class="btn btn-warning btn-xs"><i class="fa fa-question-circle-o fa-lg"></i></button>
                                        </form>
                                    </td>

                                </tr>
                            </table>
                        </div>


                    </div>
                </div>
            }

        </div>

    </div>
</nav>
<br>

@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <p>
                        @Html.ActionLink("Registra un nuevo Proveedor", "Create", null, new { @class = "btn btn-warning btn-xs" })|
                        Elementos por página: @Html.DropDownList("pageSize")  |
                        Filtro: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = " Introduce el texto a buscar:" })
                        <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span>
                        @*<a class="btn btn-info btn-xs" href="@Url.Action("Reporte")">Descargar Catálogo</a>*@
                        <a class="btn btn-info btn-xs" href="@Url.Action("ReportePorProveedores")">Descargar Catálogo</a>
                        <a class="btn btn-info btn-xs" href="@Url.Action("GenerarExcelProveedor")">Exportar a Excel</a>
                    </p>
                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@
@*Tabla de datos*@
<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>

            <th>
                @*@Html.DisplayNameFor(model => model.Empresa)*@
                @Html.ActionLink("Empresa", "Index", new { sortOrder = ViewBag.EmpresaSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.Label("Teléfono")
                @*@Html.DisplayNameFor(model => model.Calle)*@
            </th>
            <th>
                @Html.ActionLink("Producto", "Index", new { sortOrder = ViewBag.ProductoSortParm, currentFilter = ViewBag.CurrentFilter })
                @*@Html.DisplayNameFor(model => model.Calle)*@
            </th>

            <th>
                @Html.Label("Calle")
                @*@Html.DisplayNameFor(model => model.Calle)*@
            </th>
            <th>
                @Html.Label("No. Exterior")
                @*  @Html.DisplayNameFor(model => model.NoExt)*@
            </th>

            <th>
                @Html.Label("Colonia")
                @*@Html.DisplayNameFor(model => model.Colonia)*@
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.Municipio)*@

                @Html.ActionLink("Municipio", "Index", new { sortOrder = ViewBag.MunicipioSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.Estado.Estado)*@
                @Html.ActionLink("Estado", "Index", new { sortOrder = ViewBag.EstadoSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.Estado.Estado)*@
                @Html.ActionLink("Pais", "Index", new { sortOrder = ViewBag.PaisSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>


                @if (item.Status.Equals("Activo"))
                {
                    <td class="success">
                        @Html.DisplayFor(modelItem => item.Empresa)
                    </td>
                }
                else if (item.Status.Equals("Suspendido"))
                {
                    <td class="warning">
                        @Html.DisplayFor(modelItem => item.Empresa)
                    </td>
                }

                else if (item.Status.Equals("Obsoleto"))
                {
                    <td class="danger">
                        @Html.DisplayFor(modelItem => item.Empresa)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Telefonouno)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Calle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NoExt)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Colonia)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Municipio)
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.Estado)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Pais)
                </td>
                <td>
                    @*@Html.ActionLink("Editar", "Edit", new { id = item.IDProveedor, page=Model.PageNumber, pagesize= Model.PageSize, searchString= ViewBag.searchString }, new { @class = "btn btn-success btn-xs" })*@
                    @Html.ActionLink("Detalles", "Details", new { id = item.IDProveedor, page = Model.PageNumber, pagesize = Model.PageSize, searchString = ViewBag.searchString }, new { @class = "btn btn-success btn-xs" })
                    @*@Html.ActionLink("Bancos", "VerBancos", new { id = item.IDProveedor, page = Model.PageNumber, pagesize = Model.PageSize, searchString = ViewBag.searchString }, new { @class = "btn btn-info btn-xs" })
                        @Html.ActionLink("Contactos", "VerContactos", new { id = item.IDProveedor, page = Model.PageNumber, pagesize = Model.PageSize, searchString = ViewBag.searchString }, new { @class = "btn btn-info btn-xs" })
                        @Html.ActionLink("Eliminar", "Delete", new { id = item.IDProveedor, page = Model.PageNumber, pagesize = Model.PageSize, searchString = ViewBag.searchString }, new { @class = "btn btn-danger btn-xs" })*@
                </td>
            </tr>
        }

    </table>
</div>
@*<button type="submit" class="btn btn-primary" formaction="/Proveedor/Create/">Generar Reporte</button>*@
@*@Html.ActionLink("Generar Reporte", "Report", null, new { @class = "btn btn-primary navbar-btn btn-xs" })*@

@*Paginación*@
@using (Html.BeginForm("Index", "Proveedores", FormMethod.Get, new { id = "pageSizeForm" }))
{
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("Index", new
{
   page,
   sortOrder = ViewBag.CurrentSort,
   currentFilter = ViewBag.CurrentFilter,
   searchString = ViewBag.searchString,
   pageSize = ViewBag.psize
}))


    </div>
}
@*Paginación*@

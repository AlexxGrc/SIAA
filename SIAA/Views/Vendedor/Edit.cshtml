@model SIAAPI.Models.Comercial.Vendedor

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/jquery-1.10.2.js"></script>

<script>
    $(document).ready(function () {
        $('#IDTipoCuota').on('change', function () {
            if ($('#IDTipoCuota').val() == '1') {
                //alert('');
                $('#edCuota').removeAttr("disabled");
            }
            else {
                alert('Cargar las cuotas en la opcion Detalles despues de actualizar al vendedor');
                $('#edCuota').attr("disabled", true);
            }
        });
    });
</script>

@using (Html.BeginForm("Edit", "Vendedor", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Editar Vendedor</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDVendedor)

        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDTipoCuota, "Tipo Cuota", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IDTipoCuota", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IDTipoCuota, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.CuotaVendedor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CuotaVendedor, new { htmlAttributes = new { @class = "form-control", @Value = "0", @id = "edCuota" } })
                        @Html.ValidationMessageFor(model => model.CuotaVendedor, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>

        <div class="row">

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.RFC, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RFC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RFC, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDTipoContrato, "Tipo de Contrato", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IDTipoContrato", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IDTipoContrato, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Activo)
                            @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>


            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDTipoVendedor, "Tipo de Vendedor", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IDTipoVendedor", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IDTipoVendedor, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.AutorizadoACotizar, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.AutorizadoACotizar)
                            @Html.ValidationMessageFor(model => model.AutorizadoACotizar, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDOficina, "Oficina", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IDOficina", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IDOficina, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Porcentajecomision, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Porcentajecomision)
                            @Html.ValidationMessageFor(model => model.Porcentajecomision, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Comision, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Comision, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Comision, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" id="Image1" name="Image1" />
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDMoneda, "Divisa de comisión", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IDMoneda", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IDMoneda, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.EsquemaComision, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.EsquemaComision, ViewBag.listaEsquema as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EsquemaComision, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="row">

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Perfil, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Perfil, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Perfil, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDPeriocidadPago, "Periodicidad de Pago", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IDPeriocidadPago", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IDPeriocidadPago, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>




            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Notas, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Notas, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Notas, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="form-group">


        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Grabar" class="btn btn-success btn-xs" /> | @Html.ActionLink("Regresar", "Details", new { id = Model.IDVendedor }, new { @class = "btn btn-default btn-xs" }) |

            @if (Model.IDTipoCuota == 2)
            {
                @Html.ActionLink("Cargar cuotas mensuales", "CargarCuotaMensual", new { id = Model.IDVendedor }, new { @class = "btn btn-success btn-xs" })
                @*@Html.ActionLink("Cargar cuotas mensuales", "CargarCuotaMensual", null, new { @class = "btn btn-default btn-xs" })*@
            }
        </div>
    </div>


}
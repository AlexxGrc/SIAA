@model SIAAPI.Models.Inventarios.MovInterAlmacen

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var inventarioalmacenes = ViewBag.InventarioList as List<SelectListItem>;
    var almacenes = ViewBag.datosAlmacenS as List<SelectListItem>;
    var caracteristicas = ViewBag.Caracacteristicas as List<SelectListItem>;

}
<script defer src="~/Scripts/cascade.combo.js"></script>
<!DOCTYPE html>

<html>
<head>
    @*<meta name="viewport" content="width=device-width" />*@
    <title>Movimiento de lotes entre Almacenes</title>
</head>
<body>


    <form method="post" action='@Url.Action("InterAlmacenLote", "MovInterAlmacen", new { searchString = ViewBag.searchString })'>

        <div class="form-group col-md-12">
            <div class="col-md-2"> Cargar Lote</div>
            <div class="col-md-10">
                <input name="codigo" id="codigo" type="text" autofocus />
            </div>
        </div>
    </form>
    @{
        if (ViewBag.Datos != 0)
        {
            using (Html.BeginForm())
            {


                <input  type="hidden" value="@ViewBag.IDMateriaP" id="MateriaP" name="MateriaP"/>
                @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h3>Movimiento de lotes entre Almacenes</h3>
    <hr />
    <div class="form-group">
        @Html.Label("Lote" , htmlAttributes: new { @class = "control-label col-md-2"})
        <div class="col-md-8">
            <h3>@ViewBag.Lote</h3>
            <input type="hidden" value="@ViewBag.Lote"  name = "LoteI" id = "LoteI" />
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Metros disponibles", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @ViewBag.MDisponibles

        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FechaMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.FechaMovimiento, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.FechaMovimiento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IDAlmacenS, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @ViewBag.AlmacenP

        </div>
    </div>


    <div class="form-group">
        @Html.Label("Realiza movimiento", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownList("IDTrabajadorS", ViewBag.datosTrabajadorS as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
            @*@Html.EditorFor(model => model.IDTrabajadorS, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.IDTrabajadorS, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Recibe", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">

            @Html.DropDownList("IDTrabajadorE", ViewBag.datosTrabajadorE as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IDTrabajadorE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IDAlmacenE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownList("IDAlmacenE", ViewBag.datosAlmacenE as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.IDAlmacenE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Observacion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Observacion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Observacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-8">
            <input type="submit" name="GuardarMovimiento" value="Grabar" class="btn btn-success btn-xs" />
            @Html.ActionLink("Regresar a la lista", "Index", null, new { @class = "btn btn-default btn-xs" })
        </div>
    </div>
</div>
            }
        }

    }


</body>
</html>

@*@model IEnumerable<SIAAPI.Models.Inventarios.VMovInterAlmacen>*@

@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Inventarios.VMovInterAlmacen >
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
            ViewBag.Title = "Index";
            Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Movimiento entre Almacenes</h3>
<hr />

@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <p>

                        @Html.ActionLink("Crea un nuevo registro", "Create", null, new { @class = "btn btn-primary navbar-btn btn-xs" })
                        Elementos por página: @Html.DropDownList("pageSize")
                        Filtro: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = " Introduce el texto a buscar:" })
                        <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span>
                        <a class="btn btn-info  btn-xs" href="@Url.Action("CreaReporteporfecha")">Reporte por fecha</a> |
                        <a class="btn btn-info  btn-xs" href="@Url.Action("CreaReporteporArticulo")">Reporte por Artículo</a>

                    </p>
                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@


    <div class="table table-responsive-sm ">
        <table id="dtBasic" class="table table-striped" width="50">
            <thead>
                <tr>
                    <th class="th-sm">
                        @*@Html.DisplayNameFor(model => model.IDMovimiento)*@
                        @Html.ActionLink("Movimiento", "Index", new { sortOrder = ViewBag.IDMovimientoSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th class="th-sm">
                        @*@Html.DisplayNameFor(model => model.FechaMovimiento)*@
                        @Html.ActionLink("Fecha Movimiento", "Index", new { sortOrder = ViewBag.FechaMovimientoSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th class="th-sm">
                        @*@Html.DisplayNameFor(model => model.AlmacenSalida)*@
                        @Html.ActionLink("Almacén Salida", "Index", new { sortOrder = ViewBag.AlmacenSalidaSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Cref)*@
                        @Html.ActionLink("Cref", "Index", new { sortOrder = ViewBag.CrefSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Descripcion)*@
                        @Html.ActionLink("Artículo", "Index", new { sortOrder = ViewBag.DescripcionSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Presentacion)*@
                        @Html.ActionLink("Presentación", "Index", new { sortOrder = ViewBag.PresentacionSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Lote)*@
                        @Html.ActionLink("Lote", "Index", new { sortOrder = ViewBag.LoteSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Cantidad)*@
                        @Html.ActionLink("Cantidad", "Index", new { sortOrder = ViewBag.CantidadSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Entrego)*@
                        @Html.ActionLink("Entrego", "Index", new { sortOrder = ViewBag.EntregoSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.AlmacenEntrada)*@
                        @Html.ActionLink("Almacén Entrada", "Index", new { sortOrder = ViewBag.AlmacenEntradaSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Recibio)*@
                        @Html.ActionLink("Recibió", "Index", new { sortOrder = ViewBag.RecibioSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th></th>
                </tr>
            </thead>

            @foreach (var item in Model)
            {
                <tbody>
                    <tr>
                        <td style="display:none;">
                            @Html.HiddenFor(modelItem => item.IDAlmacenS)
                            @Html.HiddenFor(modelItem => item.IDArticulo)
                            @Html.HiddenFor(modelItem => item.IDCaracteristica)
                            @Html.HiddenFor(modelItem => item.IDTrabajadorS)
                            @Html.HiddenFor(modelItem => item.IDTrabajadorE)
                            @Html.HiddenFor(modelItem => item.IDAlmacenE)
                            @Html.HiddenFor(modelItem => item.IDAlmacenS)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IDMovimiento)

                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.FechaMovimiento)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AlmacenSalida)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cref)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Descripcion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Presentacion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Lote)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cantidad)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Entrego)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AlmacenEntrada)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Recibio)
                        </td>
                        <td>
                           @Html.ActionLink("Detalles", "Details", new { id = item.IDMovimiento }, new { @class = "btn btn-default btn-xs" })

                        </td>
                    </tr>
                </tbody>
            }

        </table>

    </div>

@*Paginación*@
@using (Html.BeginForm("Index", "MovInterAlmacen", FormMethod.Get, new { id = "pageSizeForm" }))
            {
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("Index", new
       {
           page,
           sortOrder = ViewBag.CurrentSort,
           currentFilter = ViewBag.CurrentFilter,
           searchString = ViewBag.CurrentFilter,
           pageSize = ViewBag.psize
       }))


    </div>
}
@*Paginación*@

@*<script src="~/Scripts/libs/salert/sweetalert.min.js"></script>
<script src="~/Scripts/libs/jquery_1.10.2/jquery-1.10.2.min.js"></script>
<script type="text/javascript">
// Basic example
$(document).ready(function () {
  $('#dtBasic').DataTable({
    "sorting": true // false to disable sorting (or any other option)
  });
  $('#dtBasic').DataTable({
      "order": [[1, "desc"]]
  });
  $('.dataTables_length').addClass('bs-select');
});
</script>*@
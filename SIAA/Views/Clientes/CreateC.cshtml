@model SIAAPI.Models.Comercial.Cobro

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Crear Domicilio de Cobro de Cliente</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDCliente)
        <div class="row">
            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.CalleCobro, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CalleCobro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CalleCobro, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.ColoniaCobro, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ColoniaCobro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ColoniaCobro, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.NumExtCobro, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NumExtCobro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumExtCobro, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.NumIntCobro, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NumIntCobro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumIntCobro, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.MunicipioCobro, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MunicipioCobro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MunicipioCobro, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.CPCobro, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CPCobro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CPCobro, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.IDEstado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("IDEstado", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IDEstado, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col col-md-6 col-sm-1">
                <div class="form-group">
                    @Html.LabelFor(model => model.Observacion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Observacion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Observacion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Grabar" class="btn btn-success btn-xs" /> | @Html.ActionLink("Regresar a la lista", "Details", new { id = Session["IDCliente"] }, new { @class = "btn btn-default btn-xs" })
        </div>
 

}
       
         
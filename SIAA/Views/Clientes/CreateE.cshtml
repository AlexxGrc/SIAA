@model SIAAPI.Models.Comercial.Entrega

@{
    ViewBag.Title = "CreateE";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var idpais = ViewBag.ListPais2 as List<SelectListItem>;
    var idestado = ViewBag.ListEstado2 as List<SelectListItem>;
    var idmunicipio = ViewBag.ListMunicipio2 as List<SelectListItem>;
    var idlocalidad = ViewBag.ListLocalidad2 as List<SelectListItem>;
    var idcolonia = ViewBag.IDColonia as List<SelectListItem>;

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <script defer src="~/Scripts/cascade.combo.js"></script>
    <div class="form-horizontal">
        <h3>Crear Domicilio de Entrega de Cliente</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDCliente)
        <div class="row">
            <table class="table">
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IDPais, "País", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.IDPais, idpais, new
                       {
                           @class = "form-control",
                           data_cascade_combo = "#IDEstado",
                           data_cascade_combo_source = Url.Action("getJsonEstadoPorPais", "Clientes"),
                           data_cascade_combo_param_name = "id"
                       })
                        </div>
                    </div>
                </div>

                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IDEstado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.IDEstado, idestado, new
                       {
                           @class = "form-control",
                           @onchange = "actualizacomboLocalidad()",
                           data_cascade_combo = "#IDMunicipio",
                           data_cascade_combo_source = Url.Action("getJsonMunicipioPorEstado", "Clientes"),
                           data_cascade_combo_param_name = "id"
                       })
                        </div>
                    </div>
                </div>

                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IDMunicipio, "Municipio", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.IDMunicipio, idmunicipio, new
                       {
                           @class = "form-control",
                           id = "IDMunicipio"
                       })
                        </div>
                    </div>
                </div>

                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IDLocalidad, "Localidad", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.IDLocalidad, idlocalidad, new { @class = "form-control", @name = "IDLocalidad", @id = "IDLocalidad" })

                            @Html.ValidationMessageFor(model => model.IDLocalidad, "", new { @class = "text-danger" })


                        </div>
                    </div>
                </div>

                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CPEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CPEntrega, new { htmlAttributes = new { @class = "form-control", @onchange = "actualizacombo()" } })
                            @Html.ValidationMessageFor(model => model.CalleEntrega, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IDColonia, "Colonia", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.IDColonia, idcolonia, new { @class = "form-control", @name = "IDColonia", @id = "IDColonia" })


                            @Html.ValidationMessageFor(model => model.IDColonia, "", new { @class = "text-danger" })


                        </div>
                    </div>
                </div>

                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CalleEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CalleEntrega, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CalleEntrega, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NumExtEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NumExtEntrega, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumExtEntrega, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NumIntentrega, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NumIntentrega, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumIntentrega, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Referencia, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Referencia, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Referencia, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ObservacionEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ObservacionEntrega, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ObservacionEntrega, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </table>
        </div>


        @*<div>

            </div>*@

        <div class="col col-md-6 col-sm-1">
            <table class="table">
                <tr>
                </tr>
                <tr>

                    <th colspan="5">
                        Días de Entrega
                    </th>
                    <th colspan="5">
                        Horario de Entrega
                    </th>
                </tr>
                <tr>

                    <th>
                        Lu
                    </th>
                    <th>
                        Ma
                    </th>
                    <th>
                        Mi
                    </th>
                    <th>
                        Ju
                    </th>
                    <th>
                        Vi
                    </th>
                    <th>
                        Horario
                    </th>
                <tr>
                    <td>
                        @Html.EditorFor(model => model.DiaEntLu, new { htmlAttributes = new { @class = "form-control" } })

                    </td>
                    <td>
                        @Html.EditorFor(model => model.DiaEntMa, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.DiaEntMi, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.DiaEntJu, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.DiaEntVi, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.HorarioEnt, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                </tr>
            </table>
        </div>

        <div class="col-md-offset-2 col-md-10">
            <div class="form-group">
                <input type="submit" value="Grabar" class="btn btn-success btn-xs" /> | @Html.ActionLink("Regresar a la lista", "Details", new { id = Session["IDCliente"] }, new { @class = "btn btn-default btn-xs" })
                @*@{
                        string paginareg = "/Clientes/Details/" + 2 + "#Domicilioe";
                    }*@
                @*<a  class="btn btn-success btn-xs" href="@paginareg">Regresar</a>*@
            </div>
        </div>
    </div>
}



    <script type="text/javascript">

    function actualizacombo() {


    var control = "#CPEntrega";
    var selectcontrol = "#IDColonia";
        $(selectcontrol).empty();

        $.ajax({
              type: 'GET',
                url: '@Url.Action("getColonias")',
                dataType: 'json',
                data: { buscar: $(control).val() },
                success: function (colonias) {

                    for (i = 0; i < colonias.length; i++)
                    {
                        var Value = colonias[i].Value;

                        var Text = colonias[i].Text;
                        var select = "Selecciona una colonia";
                          $(selectcontrol).append('<option selected value="' + Value + '">' + Text + '</option>');

                    }
                       $(selectcontrol).append('<option selected value="' + 0 + '">' + select + '</option>');


                },
                error: function (ex) {
                    //alert('Falle.' + ex.data);
                }

            });


    }

      function actualizacomboLocalidad() {


    var control = "#IDEstado";
    var selectcontrol = "#IDLocalidad";
        $(selectcontrol).empty();

        $.ajax({
              type: 'GET',
                url: '@Url.Action("getLocalidades")',
                dataType: 'json',
                data: { buscar: $(control).val() },
                success: function (localidades) {

                    for (i = 0; i < localidades.length; i++)
                    {
                        var Value = localidades[i].Value;

                        var Text = localidades[i].Text;
                        var select = "Selecciona una localidad";
                          $(selectcontrol).append('<option selected value="' + Value + '">' + Text + '</option>');

                    }
                       $(selectcontrol).append('<option selected value="' + 0 + '">' + select + '</option>');


                },
                error: function (ex) {
                    //alert('Falle.' + ex.data);
                }

            });


    }


    </script>

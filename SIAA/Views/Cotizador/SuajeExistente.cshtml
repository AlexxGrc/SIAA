@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Comercial.Caracteristica>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@


@*@model IEnumerable<SIAAPI.ClasesProduccion.Cotizaciones>*@

@{
    ViewBag.Title = "Suaje existente";
}


@if (ViewBag.Articulo != null)
{
    <h3> Articulo que se esta cotizando</h3>
    SIAAPI.Models.Comercial.Articulo arti = (SIAAPI.Models.Comercial.Articulo)ViewBag.Articulo;
    <h3 class="text-danger">@arti.Cref</h3>
    <h3 class="text-info">@arti.Descripcion</h3>

}

@if (ViewBag.Caracteristica != null)
{


    SIAAPI.Models.Comercial.Caracteristica caraarti = (SIAAPI.Models.Comercial.Caracteristica)ViewBag.Caracteristica;

    <tach2>Presentacion @caraarti.IDPresentacion</tach2>
    <table>
        @try
        {

            string[] atributoss = caraarti.Presentacion.Split(',');
            <tr>
                @foreach (var atri in atributoss)
                    {
                        string[] valor = atri.Split((char)58);
                        string Atri = valor[0];
                        string Val = valor[1];
                    <td style="background-color:burlywood" class="col-md-1">
                        <label style="color:white;">@Atri</label>
                    </td>
                }
            </tr>
                <tr>
                    @foreach (var atri in atributoss)
                    {
                        string[] valor = atri.Split((char)58);
                        string Atri = valor[0];
                        string Val = valor[1];
                        <td class="col-md-1">
                            <label>@Val</label>
                        </td>
                    }
                </tr>


        }
        catch (Exception err)
        {
        }
    </table>




}




<h2>Suajes Existentes</h2>

<p>

</p>
@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <p>
                        @*@Html.ActionLink("Crea un nuevo registro", "Create", null, new { @class = "btn btn-warning btn-xs" }) |*@
                        <div>
                            Elementos por página: @Html.DropDownList("pageSize") |

                            @*Filtro: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = " Introduce el texto a buscar:" })*@

                            @*<a class="btn btn-info btn-xs" href="@Url.Action("Reporte")">Descargar Catalogo</a>*@

                            EJE: @Html.TextBox("eje", ViewBag.eje as string, new { type = "number" })
                            AVANCE:  @Html.TextBox("avance", ViewBag.avance as string, new { type = "number" }) |
                            CLAVE:   @Html.TextBox("clave", ViewBag.clave as string, new { type = "text" })
                            <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span>
                        </div>
                       
                    </p>
                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@

<table class="table">
    <tr>
        <th>
            @Html.Label("CLAVE")
        </th>
        <th>
            @Html.Label("EJE")
        </th>
        <th>
            @Html.Label("AVANCE")
        </th>
        <th>
            @Html.Label("GAPEJE")
        </th>

        <th>
            @Html.Label("GAPAVANCE")
        </th>
        <th>
            @Html.Label("TH / ALMA")
        </th>
        <th>
            @Html.Label("CAVEJE")
        </th>
        <th>
            @Html.Label("CAVAVANCE")
        </th>
        <th>
            @Html.Label("EJE MÁQUINA")
        </th>
        <th>
            @Html.Label("FAMILIA")
        </th>
        <th>
            @Html.Label("MATERIAL")
        </th>
        <th>

        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        FormulaSiaapi.Formulas FORMULA = new FormulaSiaapi.Formulas();
        FORMULA.cadenadepresentacion = item.Presentacion;

        double eje = 0;
        double avance = 0;
        double gapeje = 0;
        double gapavance = 0;
        double repeje = 0;
        double repavance = 0;
        double th = 0;
        string alma = "";
        double ejemaq = 0;
        string material = "";


        try
        {
            eje = FORMULA.getvalor("EJE", item.Presentacion);


        }
        catch
        {

        }
        try
        {

            avance = FORMULA.getvalor("AVANCE", item.Presentacion);

        }
        catch
        {

        }
        try
        {
            ejemaq = FORMULA.getvalor("EJE MAQ", item.Presentacion);


        }
        catch
        {

        }
        try
        {
            alma = FORMULA.getValorCadena("ALMA", item.Presentacion);


        }
        catch
        {

        }
        try
        {
            th = FORMULA.getvalor("TH", item.Presentacion);


        }
        catch
        {

        }
        try
        {
            repavance = FORMULA.getvalor("REP AVANCE", item.Presentacion);


        }
        catch
        {

        }
        try
        {
            repeje = FORMULA.getvalor("REP EJE", item.Presentacion);


        }
        catch
        {

        }
        try
        {
            gapavance = FORMULA.getvalor("GAP AVANCE", item.Presentacion);


        }
        catch
        {

        }

        try
        {
            gapeje = FORMULA.getvalor("GAP EJE", item.Presentacion);


        }
        catch
        {

        }
        try
        {
            material = FORMULA.getValorCadena("MATERIAL", item.Presentacion);


        }
        catch
        {

        }


<tr>
    <td>
         @{ 
             SIAAPI.Models.Comercial.ArticuloContext db = new SIAAPI.Models.Comercial.ArticuloContext();
             string cadenacref = "select CREF  as dato from Articulo where idarticulo=" + item.Articulo_IDArticulo;

             SIAAPI.Models.Comercial.ClsDatoString CLAVE = db.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoString>(cadenacref).ToList().FirstOrDefault();

        }
        @Html.DisplayFor(modelItem => CLAVE.Dato)
    </td>
    <td>
        @Html.DisplayFor(modelItem => eje)
    </td>
    <td>
        @Html.DisplayFor(modelItem => avance)
    </td>

    <td>
        @Html.DisplayFor(modelItem => gapeje)
    </td>
    <td>
        @Html.DisplayFor(modelItem => gapavance)
    </td>
    <td>
        @{
            string dientes = "";
            if (th == 0)
            {
                dientes = alma;
            }
            else
            {
                dientes = Convert.ToString(th);
            }
        }
        @Html.DisplayFor(modelItem => dientes)
    </td>

    <td>
        @Html.DisplayFor(modelItem => repeje)
    </td>
    <td>
        @Html.DisplayFor(modelItem => repavance)
    </td>
    <td>
        @Html.DisplayFor(modelItem => ejemaq)
    </td>
    <td>
        @{ 
           
            string cadena = "select idfamilia  as dato from Articulo where idarticulo=" + item.Articulo_IDArticulo;
            SIAAPI.Models.Comercial.ClsDatoEntero idfamilia = db.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoEntero>(cadena).ToList().FirstOrDefault();
            string cadenaes = "select descripcion as dato from familia where idfamilia=" + idfamilia.Dato;
            SIAAPI.Models.Comercial.ClsDatoString familia = db.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoString>(cadenaes).ToList().FirstOrDefault();
              
        }
        @Html.DisplayFor(modelItem => familia.Dato)
    </td>
    <td>
        @Html.DisplayFor(modelItem => material)
    </td>
    <td>
        @Html.ActionLink("Seleccionar", "CotizadorRapido1", "Cotizador", new { idsuaje = item.ID }, new { @class = "btn btn-info btn-xs" })
       
    </td>
</tr>
    }

</table>
@*Paginación*@
@using (Html.BeginForm("SuajeExistente", "Cotizador", FormMethod.Get, new { id = "pageSizeForm" }))
{
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("SuajeExistente", new
   {
       page,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       searchString = ViewBag.searchString,
       Fechainicio = ViewBag.Fechainicio,
       FechaFinal = ViewBag.Fechafinal,
       eje=ViewBag.eje,
       avance=ViewBag.avance,
       clave=ViewBag.clave,
       pageSize = ViewBag.psize
   }))


    </div>
}


<script>
    

</script>

@*Paginación*@

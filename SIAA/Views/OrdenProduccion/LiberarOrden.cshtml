@model SIAAPI.Models.Produccion.LiberaOrden

@{
    ViewBag.Title = "LiberarOrden";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Liberar Orden de Producción</h2>
@using (Html.BeginForm("LiberarOrden", "OrdenProduccion", FormMethod.Post))
{
    <input type="hidden" name="OrdenLibera" value="@ViewBag.OrdenLibera">

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IDOrden, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.IDOrden, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.idorden, disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.IDOrden, "", new { @class = "text-danger" })
                <input type="hidden" name="IDOrden" value="@ViewBag.idorden">
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FechaLiberacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FechaLiberacion, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.horafecha } })
                @Html.ValidationMessageFor(model => model.FechaLiberacion, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.IDAlmacen, "Almacen", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("IDAlmacen", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.IDAlmacen, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Artículo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("IDArticulo", null, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Característica", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("IDCaracteristica", ViewBag.IDCaracteristica as List<SelectListItem>, new { @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Lote", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                <input type="text" class="form-control" value="@ViewBag.Lote" name="Lote" id="Lote" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @*@Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control"}, onchange = "OnChangeEvent()", id="cantidad" })*@

                @Html.TextBoxFor(model => model.Cantidad, new { @class = "form-control", onchange = "OnChangeEvent()", id = "cantidad" })
                @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Observación", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                <input type="text" class="form-control" name="Observacion" id="Observacion" />
            </div>
        </div>
        <div class="form-group">

            @Html.Label("Unidad", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                <h5><p id="unidad">@ViewBag.Unidad</p></h5>
            </div>

        </div>

        <table class="table">
            <tr>
                <td>Cantidad Original</td>
                <td>Cantidad Liberada</td>
                <td>Sobrante</td>
            </tr>
            <tr>
                <td><p id="cantidadoriginal">@ViewBag.CantidadOriginal</p></td>
                <td><p id="cantidadliberada">@ViewBag.CantidadLiberada</p></td>
                <td><div id="sobrante"></div></td>
            </tr>

        </table>

        <div class="table-responsive">


            <table class="table table-striped" width="50">
                <tr>
                    <td>
                        <input type="button" onclick="Rechazo()" value="Revisar limite de rechazo" class="btn btn-danger btn-xs" />

                    </td>
                    <td>
                        <input type="submit" value="Liberacion Parcial" onclick="myFunction1()" style="display:none" name="Enviar" id="Enviar" class="btn btn-warning btn-xs" />

                    </td>
                    <td>
                        <input type="submit" id="Enviar1" onclick="myFunction()" style="display:none" name="Enviar" value="Liberacion Final" class="btn btn-success btn-xs" />
                    </td>
                    <td>
                        @Html.ActionLink("Regresar a la lista", "Prioridad", null, new { @class = "btn btn-default btn-xs" })
                    </td>
                </tr>
            </table>

            <br />

            <h2 class="text-danger">@ViewBag.MensajeError</h2>

        </div>
    </div>

}


<script src="~/Scripts/libs/salert/sweetalert.min.js"></script>
<script src="~/Scripts/libs/jquery_1.10.2/jquery-1.10.2.min.js"></script>

<script type="text/javascript" language="javascript">
    function myFunction() {
        var x = document.getElementById("Enviar1");

        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }
</script>
<script type="text/javascript" language="javascript">
    function myFunction1() {
        var x = document.getElementById("Enviar");

        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }
</script>
<script>
    function SeguroLibera(cantidad, revision) {


        swal({
            title: "Revisar: " + revision + "\n Limite Rechazo:" + cantidad,
            text: "",
            type: "Warning",
            buttons: true,
            dangerMode: true,
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Si, Libero!",
            cancelButtonText: "No!",
            closeOnConfirm: true
        }).then(function (isConfirm) {
            if (isConfirm) {

                myFunction();

            }
            else {
                swal("Abortado", "Tu orden no podrá ser liberada bajo ese parámetro, favor de revisar", "error");
            }
        }

        );



    }

</script>
<script type="text/javascript" language="javascript">
    function myFunction() {
        var x = document.getElementById("Enviar");
        var y = document.getElementById("Enviar1");
        if (x.style.display === "block" && y.style.display === "block") {
            x.style.display = "none";
            y.style.display = "none";
        } else {
            x.style.display = "block";
            y.style.display = "block";
        }

    }
</script>
<script>

 function Rechazo() {
     var LimiteRechazo = 0;
     var Revision = 0;
        $.ajax({
            type: 'GET',
            url: '@Url.Action("catidadrechazo")',
            dataType: 'json',
            data: { cantidadLi: $("#cantidad").val(), IDOrden:@ViewBag.idorden},
            success: function (obj) {

                LimiteRechazo = obj.rechazo;
                Revision = obj.Revision;
                SeguroLibera(LimiteRechazo, Revision);
                //alert(LimiteRechazo);
            },
            error: function (ex) {
                //alert('Falle.' + ex.data);
            }

        });
    }
</script>

<script type="text/javascript">
 function OnChangeEvent(){
     var coriginal = @ViewBag.CantidadOriginal;
     var cliberada = @ViewBag.CantidadLiberada;
     var cantidad = document.getElementById("cantidad").value;
     var totalc=0;

     if (cliberada == 0)
     {
         if (cantidad > coriginal)
         {
             totalc=cantidad-coriginal;
          }
     }
     else{
         var faltante=coriginal-cliberada;

         if(cantidad>faltante){

             totalc=cantidad-faltante;
     }
     }


    $('#sobrante').text(totalc);
 }
</script>





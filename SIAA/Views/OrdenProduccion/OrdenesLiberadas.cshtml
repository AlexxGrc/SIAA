@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Produccion.LiberaOrden>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
    ViewBag.Title = "Ordenes Liberadas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Ordenes Liberadas</h3>
<hr />



@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                <p>

                    Elementos por página: @Html.DropDownList("pageSize")  |
                    Escribe no. orden: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = " Escribe la orden:" })
                    |
                    @*Máquinas:  @Html.DropDownList("Maquina", (IEnumerable<SelectListItem>)ViewBag.Maquinas, null, htmlAttributes: new { @class = "form-control", @id = "Maquina" })*@

                    <input type="submit" value="Aplicar" class="btn btn-primary navbar-btn btn-xs" /><span class="sr-only">(current)</span>
                    @Html.ActionLink("Excel", "VLiberaciones", "OrdenProduccion", null, new { @class = "btn btn-success btn-xs" })
                </p>
                }

            </div>
        </form>
    </div>
</nav>
<br>

<div class="col-xs-20">
    <div class="input-group">

    </div>
</div>

<br />

<table class="table">
    <tr>
        <th>
            @Html.Label("Orden de Producción")
            @*  @Html.DisplayNameFor(model => model.IDOrdenP)*@
        </th>

        <th>
            @Html.Label("Cliente")
            @*@Html.DisplayNameFor(model => model.FechaInicio)*@
        </th>
        <th>
            @Html.Label("Fecha liberación")
            @* @Html.DisplayNameFor(model => model.IDTrabajador)*@
        </th>
        <th>
            @Html.Label("Artíulo")
            @*@Html.DisplayNameFor(model => model.FechaInicio)*@
        </th>
        <th>
            @Html.Label("Cantidad")
            @*@Html.DisplayNameFor(model => model.FechaInicio)*@
        </th>

        <th>
            @Html.Label("Lote")
            @*@Html.DisplayNameFor(model => model.FechaInicio)*@
        </th>
        <th>
            @Html.Label("Liberación")
            @*@Html.DisplayNameFor(model => model.FechaInicio)*@
        </th>
        <th></th>
        <th></th>
    </tr>

    @{

        int contadorprioridad = 1;


        foreach (var item in Model)
        {
            SIAAPI.Models.Produccion.OrdenProduccionContext db = new SIAAPI.Models.Produccion.OrdenProduccionContext();
            //var elemento =   db.Database.ExecuteSqlCommand(Cadena);

            SIAAPI.Models.Comercial.ClsDatoEntero idc = db.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoEntero>("select idcliente as Dato from OrdenProduccion where idorden=" + item.IDOrden).ToList().FirstOrDefault();
            SIAAPI.Models.Comercial.Clientes cliente = db.Database.SqlQuery<SIAAPI.Models.Comercial.Clientes>("Select * from Clientes where IDCliente=" + idc.Dato).FirstOrDefault();
            SIAAPI.Models.Produccion.OrdenProduccion ordenes = new SIAAPI.Models.Produccion.OrdenProduccionContext().OrdenesProduccion.Find(item.IDOrden);

            SIAAPI.Models.Comercial.Articulo articulo = db.Database.SqlQuery<SIAAPI.Models.Comercial.Articulo>("select *  from Articulo where IDarticulo = " + ordenes.IDArticulo).ToList().FirstOrDefault();



        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.IDOrden)
                <h5>Pedido @ordenes.IDPedido</h5>
            </td>

            <td>
                <div>@cliente.Nombre </div>
                @if (cliente.FacturacionExacta == true)
                {
                    <div>Factura Exacto </div>
                }
                else
                {
                    <div>Acepta Margen</div>
                }
                @if (cliente.CertificadoCalidad == true)
                {
                    <div>Requiere Certificado</div>
                }
                else
                {
                    <div>No requiere Certificado</div>
                }
            </td>
            <td>
                @item.FechaLiberacion.ToString("dd") -   @item.FechaLiberacion.ToString("MM") -  @item.FechaLiberacion.ToString("yyyy")   @item.FechaLiberacion.ToString("T")
            </td>
            <td>
                @articulo.Cref
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Cantidad)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lote)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoLiberacion)
            </td>
            <td>
                @Html.ActionLink("Ajuste liberación", "AjusteLiberacion", new { id = item.IDLibera, page = Model.PageNumber }, new { @class = "btn btn-warning btn-xs" })
             

            </td>
            @{

                SIAAPI.Models.Calidad.CertificadoCalidad dato = db.Database.SqlQuery<SIAAPI.Models.Calidad.CertificadoCalidad>("select * from [CertificadoCalidad]  where idlibera=" + item.IDLibera).ToList().FirstOrDefault();
                
                if (dato != null)
                {
                        <td>
                            @Html.ActionLink("Certificado", "PdfCertificado", new { id = dato.IDCertificado }, new { @class = "btn btn-primary btn-xs" })
                            @Html.ActionLink("Editar Certificado", "EditarCalidad", new { IDCertificado = dato.IDCertificado, page = Model.PageNumber }, new { @class = "btn btn-primary btn-xs" })

                        </td>
                }
                else
                {
        <td>
            @Html.ActionLink("Crear certificado", "Calidad", new { IDLibera = item.IDLibera }, new { @class = "btn btn-primary btn-xs" })

        </td>
                }



            }

        </tr>
        }
    }
</table>

@using (Html.BeginForm("OrdenesLiberadas", "OrdenProduccion", FormMethod.Get, new { id = "pageSizeForm" }))
{
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("OrdenesLiberadas", new
   {
       page,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       searchString = ViewBag.SearchString,
       pageSize = ViewBag.psize,

   }))


    </div>
}
@*Paginación*@

<script src="~/Scripts/libs/jquery_1.10.2/jquery-1.10.2.min.js"></script>
<script>
</script>
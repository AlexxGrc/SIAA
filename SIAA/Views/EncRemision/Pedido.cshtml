@model List<SIAAPI.ViewModels.Comercial.VCarritoRemision>
@*@model List<SIAAPI.Models.Comercial.CarRec>*@

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/libs/jquery_1.10.2/jquery-1.10.2.min.js"></script>
<script type="text/javascript">


    $(document).ready(function () {

        $("#IDCliente").change(function () {
            $("#IDMetodoPago").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getmetodo")',
                dataType: 'json',
                data: { id: $("#IDCliente").val() },
                success: function (metodos) {
                $.each(metodos, function (i, metodo) {
                $("#IDMetodoPago").append('<option value="' + metodo.Value + '">' +
                 metodo.Text + '</option>');
                });
                },
                error: function (ex) {
                alert('Failed to retrieve.' + ex);
                }
            });
            return false;
        })
    });

</script>

<script type="text/javascript">


    $(document).ready(function () {

        $("#IDCliente").change(function () {
            $("#IDFormapago").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getforma")',
                dataType: 'json',
                data: { id: $("#IDCliente").val() },
                success: function (metodos) {
                $.each(metodos, function (i, metodo) {
                $("#IDFormapago").append('<option value="' + metodo.Value + '">' +
                 metodo.Text + '</option>');
                });
                },
                error: function (ex) {
                alert('Failed to retrieve.' + ex);
                }
            });
            return false;
        })
    });

</script>

<script type="text/javascript">


    $(document).ready(function () {

        $("#IDCliente").change(function () {
            $("#IDMoneda").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getmoneda")',
                dataType: 'json',
                data: { id: $("#IDCliente").val() },
                success: function (metodos) {
                $.each(metodos, function (i, metodo) {
                $("#IDMoneda").append('<option value="' + metodo.Value + '">' +
                 metodo.Text + '</option>');
                });
                },
                error: function (ex) {
                alert('Failed to retrieve.' + ex);
                }
            });
            return false;
        })
    });

</script>
<script type="text/javascript">


    $(document).ready(function () {

        $("#IDCliente").change(function () {
            $("#IDCondicionesPago").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getcondiciones")',
                dataType: 'json',
                data: { id: $("#IDCliente").val() },
                success: function (metodos) {
                $.each(metodos, function (i, metodo) {
                $("#IDCondicionesPago").append('<option value="' + metodo.Value + '">' +
                 metodo.Text + '</option>');
                });
                },
                error: function (ex) {
                alert('Failed to retrieve.' + ex);
                }
            });
            return false;
        })
    });

</script>




@if (ViewBag.otro != 0)
{
    <h2>Detalles</h2>

    foreach (var item in ViewBag.data)
    {
        <table>
            <tr>
                <B>Cliente: </B>
                @item.Cliente
                <br />
                <B>Fecha: </B>
                @item.Fecha
                <B><br />Fecha Requerida: </B>
                @item.FechaRequiere
            </tr>
        </table>
    }



    <h2>Remisión</h2>


    using (Html.BeginForm("update", "EncRemision", FormMethod.Post))
    {
        <input type="hidden" name="id" value="@ViewBag.id" />
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.Label("Fecha", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @{
                                string fecha = DateTime.Now.Year + "/" + DateTime.Now.Month + "/" + DateTime.Now.Day;
                            }
                            <input type="text" name="Fecha" class="form-control" value="@fecha" readonly="readonly" />
                        </div>
                    </div>
                </div>
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.Label("Documento Factura", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            <input type="text" name="Proviene" class="form-control" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.Label("Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownList("IDCliente", ViewBag.cliente as List<SelectListItem>, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.Label("Método de Pago", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownList("IDMetodoPago", ViewBag.metodo as List<SelectListItem>, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.Label("Forma de Pago", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownList("IDFormapago", ViewBag.forma as List<SelectListItem>, new { @class = "form-control" })
                        </div>
                    </div>
                </div>


                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.Label("Divisa", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownList("IDMoneda", ViewBag.moneda as List<SelectListItem>, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.Label("Condiciones de Pago", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownList("IDCondicionesPago", ViewBag.condiciones as List<SelectListItem>, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.Label("Uso CFDI", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">

                            @Html.DropDownList("IDUsoCFDI", ViewBag.usocfdi as List<SelectListItem>, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.Label("Vendedor", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownList("IDVendedor", ViewBag.vendedor as List<SelectListItem>, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.Label("Observación", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            <input type="text" name="Observacion" class="form-control" />
                        </div>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        @Html.Label("Domicilio de Entrega", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownList("Entrega", ViewBag.entrega as List<SelectListItem>, new { @class = "form-control" })
                        </div>
                    </div>

                </div>
                @*<div class="col col-md-6 col-sm-1">
                        <div class="form-group">
                            @Html.Label("Almacen", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.DropDownList("IDAlmacen", null, htmlAttributes: new { @class = "form-control", @readonly = "true" })

                            </div>
                        </div>
                    </div>*@

            </div>




        </div>

        <div class="table-responsive">
            <table class="table">
                <tr>

                    <th>Referencia</th>
                    <th>Articulo</th>


                    <th>Lote</th>
                    <th>Cantidad</th>
                    <th>Suministro</th>
                    <th>Precio Unitario</th>
                    <th>Importe</th>
                    <th>IVA</th>
                    <th>Total</th>

                    <th></th>
                </tr>

                @if (Model != null && Model.Count > 0)
                {
                    int j = 0;
                    foreach (SIAAPI.ViewModels.Comercial.VCarritoRemision i in Model)
                    {
                        <tr name="@i.IDCarritoRemision">
                            @Html.TextBoxFor(a => a[j].IDDetExterna, new { @class = "form-control", @Value = i.IDDetExterna, @type = "hidden" })
                            @Html.TextBoxFor(a => a[j].IDPedido, new { @class = "form-control", @Value = i.IDPedido, @type = "hidden" })
                            @Html.TextBoxFor(a => a[j].IDCarritoRemision, new { @class = "form-control", @Value = i.IDCarritoRemision, @type = "hidden" })
                            @Html.TextBoxFor(a => a[j].Cantidad, new { @class = "form-control", @Value = i.CantidadPedida, @type = "hidden" })
                            @Html.TextBoxFor(a => a[j].IDCaracteristica, new { @class = "form-control", @Value = i.IDCaracteristica, @type = "hidden" })
                            @Html.TextBoxFor(a => a[j].Nota, new { @class = "form-control", @Value = i.Nota, @type = "hidden" })
                            @Html.TextBoxFor(a => a[j].Costo, new { @class = "form-control", @Value = i.Costo, @type = "hidden" })

                            @{

                                int IDC = i.IDArticulo;
                                SIAAPI.Models.Comercial.Articulo articulo = new SIAAPI.Models.Comercial.ArticuloContext().Articulo.Find(IDC);
                            }

                            <td>@articulo.Cref</td>
                            <td>
                                @Html.DisplayFor(modelItem => i.Articulo)
                            <div>@Html.DisplayFor(modelItem => i.Presentacion)</div>
                        </td>


                        <td>@Html.TextBoxFor(a => a[j].Lote, new { @class = "form-control", style = "width:80px;" })</td>
                        <td>@Html.DisplayFor(modelItem => i.CantidadPedida)</td>
                        @{
                            SIAAPI.Models.Comercial.PedidoContext oc = new SIAAPI.Models.Comercial.PedidoContext();
                            SIAAPI.Models.Comercial.DetPedido detPedido = oc.DetPedido.Find(i.IDDetExterna);
                        }



                        <td>@Html.TextBoxFor(a => a[j].Suministro, new { @class = "form-control", style = "width:80px;", @Value = i.CantidadPedida })</td>
                        @*<td>@Html.TextBoxFor(a => a[j].Costo, new { @class = "form-control", style = "width:80px;", @Value = i.Costo })</td>*@

                        <td>@Html.DisplayFor(modelItem => i.Costo)</td>
                        <td>@Html.DisplayFor(modelItem => i.Importe)</td>
                        <td>@Html.DisplayFor(modelItem => i.ImporteIva)</td>
                        <td>@Html.DisplayFor(modelItem => i.ImporteTotal)</td>


                        <td>

                            @*  @Html.ActionLink("EncRemision", "delete", new { id = i.IDCarritoRemision }, new { @class = "tbl_del_btn fa fa-trash" })*@
                            @Html.ActionLink(" ", "delete", new { id = i.IDCarritoRemision }, new { @class = "tbl_del_btn fa fa-trash" })

                            @*<a class="delete"   data-id="@i.IDCarritoRemision" ><i class="fa fa-trash-o fa-lg"></i></a>*@
                        </td>

                    </tr>
                    <tr name="@i.IDCarritoRemision">
                        @{ string valor = i.IDAlmacen.ToString();
                        }
                        @try
                        {
                            <td>@Html.DropDownListFor(a => a[j].IDAlmacen, new SelectList(ViewBag.IDAlmacenP, "IDAlmacen", "CodAlm", valor), new { @class = "form-control" })</td>
                        }
                        catch (Exception err)
                        {
                            <td>@Html.DropDownListFor(a => a[j].IDAlmacen, new SelectList(ViewBag.IDAlmacenP, "IDAlmacen", "CodAlm"), new { @class = "form-control" })</td>
                        }
                        <td colspan="10"><h6 class="text-info">@Html.DisplayFor(modelItem => i.Nota)</h6> </td>
                    </tr>


                    j++;
                }
            }
            </table>
        </div>
        <div class="table-responsive">
            <table class="table table-striped" width="50">
                <tr>
                    <th class="col-lg-1">
                        Moneda Origen
                    </th>
                    <th class="col-lg-1">
                        Subtotal
                    </th>
                    <th class="col-lg-1">
                        IVA
                    </th>
                    <th class="col-lg-1">
                        Total
                    </th>
                    <th class="col-lg-1">
                        Total en Pesos Mexicanos
                    </th>
                </tr>
                @foreach (var itemresumen in ViewBag.sumatoria)
                {

                    <tr>
                        <td class="col-lg-1">
                            @itemresumen.MonedaOrigen
                        </td>
                        <td class="col-lg-1">
                            @String.Format("{0:C}", itemresumen.Subtotal)
                        </td>
                        <td class="col-lg-1">
                            @String.Format("{0:C}", itemresumen.IVA)
                        </td>
                        <td class="col-lg-1">
                            @String.Format("{0:C}", itemresumen.Total)
                        </td>
                        <td class="col-lg-1">
                            @String.Format("{0:C}", itemresumen.TotalenPesos)
                        </td>

                    </tr>
                }
            </table>
        </div>

        <input class="btn btn-success" type="submit" value="Aceptar" id="ocultar" onclick="myFunction()" />
    }
}


@{
    SIAAPI.Models.Comercial.AlmacenContext dba = new SIAAPI.Models.Comercial.AlmacenContext();
    var almacenes = dba.Almacenes.ToList();
}
<div class="text-info"><h3>Almacenes</h3></div>
<table class="table-responsive">
    <thead>Codigo</thead>
    <thead>Descripcion</thead>

    @foreach (SIAAPI.Models.Comercial.Almacen ALMACEN in almacenes)
    {
        <tr>
            <td class="col-md-2">@ALMACEN.CodAlm</td>
            <td class="col-md-6">@ALMACEN.Descripcion</td>
        </tr>

    }
</table>

<script>

        var url = '@Url.Action("DeletecarritoR", "EncRemision")';
        $('.delete').click(function () {
            var row = $(this).closest('tr');
            $.post(url, { id: $(this).data('id') }, function (response) {
                if (response) {
                    location.reload();
                    row.remove();

                }
            }).fail(function (response) {
                // display error message?
            });
        });
</script>

<script type="text/javascript" language="javascript">
    function myFunction() {
        var x = document.getElementById("ocultar");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }
</script>
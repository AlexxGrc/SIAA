@*@model IEnumerable<SIAAPI.Models.Cfdi.Encfacturas>*@
<globalization uiCulture="auto" culture="auto" />
@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Cfdi.EncfacturaProv>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
            ViewBag.Title = "IndexAll";
            Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Facturas de Proveedores</h3>
<hr />

@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <div>
                        @Html.ActionLink("Cargar una factura", "CreatedesdeArchivo", null, new { @class = "btn btn-warning btn-xs" })
                        @Html.ActionLink("Validar Proveedores", "ValidarProv", null, new { @class = "btn btn-info btn-xs" })
                        Elementos por página: @Html.DropDownList("pageSize")

                    </div>
                    <div>
                        <row>
                            Facturas: @Html.DropDownList("FacPag", (IEnumerable<SelectListItem>)ViewData["FacPag"], "Todas")
                        </row>

                        <row>
                            Proveedor: @Html.DropDownList("ClieFac", "Todos")
                        </row>
                        <row>
                            Estado: @Html.DropDownList("Estado", "Todos")
                        </row>
                        <div>
                            <row>
                                Factura: @Html.TextBox("Numero")
                            </row>
                            <row>
                                Fecha: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = "AAAA-MM-DD" })
                            </row>
                            <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span>

                            <a class="btn btn-info btn-xs" href="@Url.Action("Reporte")">Generar Reporte</a>

                        </div>
                    </div>
                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@



<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <th>
                @Html.ActionLink("Activa", "Index", new { sortOrder = ViewBag.EstadoSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>



            <th>
                @*@Html.DisplayNameFor(model => model.Numero)*@
                @Html.ActionLink("Numero", "Index", new { sortOrder = ViewBag.NumeroSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th></th>
            <th>
                Ticket
             </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Fecha)*@
                @Html.ActionLink("Fecha", "Index", new { sortOrder = ViewBag.FechaSortParm, currentFilter = ViewBag.CurrentFilter })


            </th>
            <th>
                @*Html.DisplayNameFor(model => model.Nombre_Cliente)*@
                @Html.ActionLink("Nombre Proveedor", "Index", new { sortOrder = ViewBag.ClienteSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Subtotal)*@
                @Html.Label("Subtotal")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.IVA)*@
                @Html.Label("IVA")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Total)*@
                @Html.Label("Total")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.UUID)*@
                @Html.Label("Moneda")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.RutaXML)*@
                @Html.Label("XML")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.RutaXML)*@
                @Html.Label("PDF")
            </th>


            <th>
                @Html.Label("Cancelar")

            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
            {
            <tr>

                <td>
                    @if (item.Estado == "A")
                {
                        <a><span class="fa fa-check-circle" style="font-size:16px;color:green"></span></a>
                        if (item.pagada == true)
                        {
                            <a><span class="fa fa-check-circle" style="font-size:16px;color:blueviolet"></span></a>
                        }
                    }
                    else
                    {
                        <a><span class="fa fa-times-circle" style="font-size:16px;color:red"></span></a>
                    }


                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.UUID).ToString().Substring(0, 5)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Numero)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Fecha)
                </td>

                <td>

                    @Html.DisplayFor(modelItem => item.Nombre_Proveedor)
                    @if (item.IDProveedor == 0)
                {
                        <a><span class="fa fa-user-times" style="font-size:16px;color:red"></span></a>
                    }

                </td>
                <td align="right">
                    @String.Format("{0:C}", item.Subtotal)
                    @*@Html.DisplayFor(modelItem => item.Subtotal)*@
                </td>
                <td align="right">

                    @String.Format("{0:C}", item.IVA)
                    @*@Html.DisplayFor(modelItem => item.IVA)*@
                </td>
                <td align="right">
                    @String.Format("{0:C}", item.Total)
                    @*@Html.DisplayFor(modelItem => item.Total)*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Moneda)
                </td>
                <td>
                    @Html.ActionLink("XML", "Descargarxml", new { id = item.ID }, new { @class = "btn btn-warning btn-xs" })
                </td>
                <td>
                    @if (string.IsNullOrEmpty(item.RutaPDF))
                {    @Html.ActionLink("Subir PDF", "SubirArchivo", new { id = item.ID }, new { @class = "btn btn-info btn-xs" })
                    }
                    else
                    { @Html.ActionLink("PDF", "DescargarPdf", new { id = item.ID }, new { @class = "btn btn-primary btn-xs" })
                    }
                </td>
                @if (item.ConPagos == true)
                {
                    <td>
                        @Html.ActionLink("Ver Pagos", "VPagosProv", new { id = item.ID }, new { @class = "btn btn-default btn-xs" })
                    </td>
                }


                <td>
                    @if (item.Estado == "A")
                    {
                        <a href="#" class="edit" onclick="Cancelar(@item.ID)"><span class="fa fa-ban" style="font-size:16px;color:red"></span></a>
                    }
                </td>

                <td>
                    @if (item.Estado == "A")
                    {
                        @Html.ActionLink("Descargar ticket ", "descargarTicket", new { id = item.ID }, new { @class = "btn btn-default btn-xs" })
                    }
                </td>

                
            </tr>
            @*<td>
                    @Html.DisplayFor(modelItem => item.pagada)
                </td>*@

        }
    </table>
</div>
<br />
<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <th class="col-lg-1">
                Moneda Origen
            </th>
            <th class="col-lg-1">
                Subtotal
            </th>
            <th class="col-lg-1">
                IVA
            </th>
            <th class="col-lg-1">
                Total
            </th>
            <th class="col-lg-1">
                Total en Pesos Mexicanos
            </th>
        </tr>
        @foreach (var itemresumen in ViewBag.sumatoria)
            {

            <tr>
                <td class="col-lg-1">
                    @itemresumen.MonedaOrigen
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.Subtotal)
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.IVA)
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.Total)
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.TotalenPesos)
                </td>

            </tr>
        }
    </table>
</div>

@*Paginación*@
@using (Html.BeginForm("Index", "FacturaProv", FormMethod.Get, new { id = "pageSizeForm" }))
            {
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("Index", new
       {
           page,
           sortOrder = ViewBag.CurrentSort,
           currentFilter = ViewBag.CurrentFilter,
           searchString = ViewBag.CurrentFilter,
           pageSize = ViewBag.psize
       }))


    </div>
}
@*Paginación*@

<script src="~/Scripts/libs/salert/sweetalert.min.js"></script>
<script>

    

    function Cancelar(id) {
        var urledit = '@Url.Action("cancelarFactura", "FacturaProv")';
            swal({
                title: "¿Estas seguro de cancelar?",
                text: "Esta opcion cancela la factura!",
                type: "Warning",
                buttons: true,
                dangerMode: true,
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Si, Cancelala!",
                cancelButtonText: "No, dejala!",
                closeOnConfirm: true
            }).then(function(isConfirm) {
                if (isConfirm) {

                    $.post(urledit, { id: id }, function (response) {
                        if (response) {
                            location.reload();
                            swal("La factura ha sido cancelada!","","success")

                        }
                    }).fail(function (response) {
                        swal("La factura no pudo ser cancelada!","","error")

                    })
                }
                else {
                    swal("Abortado", "Tu factura no tuvo cambios", "error");
                }
            }

          );



        }


</script>

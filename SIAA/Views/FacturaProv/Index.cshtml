@*@model IEnumerable<SIAAPI.Models.Cfdi.Encfacturas>*@
<globalization uiCulture="auto" culture="auto" />
@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Cfdi.VEncFacturaProvSaldo>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
    ViewBag.Title = "IndexAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav class="navbar navbar-default">
    <div class="container-fluid">

        <div class="form-group">
            @{
                <div class="col col-md-6 col-sm-1">
                    <div class="form-group">
                        <div>
                            <table>
                                <tr>
                                    <td>  <h3>Facturas proveedores</h3> </td>
                                    <td>
                                        <form method="post" action='@Url.Action("DescargarPDFH", "FilePDF", new { ruta = "~/Manual/", name = "SIAAPI_Compras_Facturas_Digitales.pdf" })' target="_blank">
                                            <button class="btn btn-warning btn-xs"><i class="fa fa-question-circle-o fa-lg"></i></button>
                                        </form>
                                    </td>

                                </tr>
                            </table>
                        </div>


                    </div>
                </div>
            }

        </div>

    </div>
</nav>
<br>

@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {

                    <div>
                        @Html.ActionLink("Cargar una factura", "CreatedesdeArchivo", null, new { @class = "btn btn-warning btn-xs" })
                        @Html.ActionLink("Validar Proveedores", "ValidarProv", null, new { @class = "btn btn-info btn-xs" })
                        @Html.ActionLink("Registrar Factura sin xml", "Create", null, new { @class = "btn btn-success btn-xs" })



                        Elementos por página: @Html.DropDownList("pageSize")

                    </div>
                    <div>
                        <row>
                            Facturas: @Html.DropDownList("FacPag", (IEnumerable<SelectListItem>)ViewData["FacPag"], "Todas")
                        </row>

                        <row>
                            Proveedor: @*@Html.DropDownList("ClieFac", "Todos")*@     @Html.DropDownList("IDProveedor", ViewBag.proveedor as List<SelectListItem>, new { @class = "form-control" })
                        </row>
                        <row>
                            Estado: @Html.DropDownList("Estado", "Todos")
                        </row>
                        <div>
                            <row>
                                Factura: @Html.TextBox("Numero")
                            </row>
                            <row>

                                Ticket: @Html.TextBox("Ticket")
                            </row>
                            <row>
                                Fecha: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = "AAAA-MM-DD" })
                            </row>
                            <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span>

                            @*<a class="btn btn-info btn-xs" href="@Url.Action("Reporte")">Generar Reporte</a>*@

                        </div>

                        <div class="dropdown dropright col-xs-2">
                            <button class="btn btn-secondary dropdown-toggle dropdown-toggle-split btn-xs " type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Reportes de Facturas
                                <span class="caret"></span>
                                <span class="sr-only"></span>
                            </button>

                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">

                                <li><a class="dropdown-item" href="@Url.Action("EntreFechaFacProv")"> Listado Facturas </a></li>
                                <li><a class="dropdown-item" href="@Url.Action("AntiguedadSaldos")"> Antiguedad de saldos </a></li>
                                <li><a class="dropdown-item" href="@Url.Action("VHistorialPagoProv")"> Facturas vs Pagos </a></li>
                                <li><a class="dropdown-item" href="@Url.Action("HistorialCortePagoProv")">FacturasCorteMes</a></li>
                            </ul>

                        </div>
                    </div>
                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@



<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <th>
                @Html.ActionLink("Ticket", "Index", new { sortOrder = "ID", searchString = ViewBag.searchString, Numero = ViewBag.Numero })
            </th>
            <th>
                @Html.ActionLink("Activa", "Index", new { sortOrder = ViewBag.EstadoSortParm, searchString = ViewBag.searchString, Numero = ViewBag.Numero })
            </th>



            <th>
                @*@Html.DisplayNameFor(model => model.Numero)*@
                @Html.ActionLink("Numero", "Index", new { sortOrder = ViewBag.NumeroSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th></th>

            <th>
                @*@Html.DisplayNameFor(model => model.Fecha)*@
                @Html.ActionLink("Fecha", "Index", new { sortOrder = ViewBag.FechaSortParm, currentFilter = ViewBag.CurrentFilter })


            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Fecha)*@
                @Html.ActionLink("Fecha Sub", "Index", new { sortOrder = ViewBag.FechaSortParm, currentFilter = ViewBag.CurrentFilter })


            </th>

            <th>
                @*Html.DisplayNameFor(model => model.Nombre_Cliente)*@
                @Html.ActionLink("Nombre Proveedor", "Index", new { sortOrder = ViewBag.ClienteSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Subtotal)*@
                @Html.Label("Subtotal")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.IVA)*@
                @Html.Label("IVA")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Total)*@
                @Html.Label("Total")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.UUID)*@
                @Html.Label("Moneda")
            </th>
            @if (@Roles.IsUserInRole("Administrador") || @Roles.IsUserInRole("Sistemas") || @Roles.IsUserInRole("Gerencia") || @Roles.IsUserInRole("Compras") || @Roles.IsUserInRole("Facturacion"))
            {
                <th>
                    @*@Html.DisplayNameFor(model => model.RutaXML)*@
                    @Html.Label("Importe Pagado")
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.RutaXML)*@
                    @Html.Label("Saldo Insoluto")
                </th>
            }
            <th>
                @*@Html.DisplayNameFor(model => model.RutaXML)*@
                @Html.Label("XML")
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.RutaXML)*@
                @Html.Label("PDF")
            </th>
            <th>
                Revisión

            </th>
            <th>
                Pagos

            </th>
            <th>
                @Html.Label("Cancelar")

            </th>
            <th></th>
        </tr>

        @foreach (SIAAPI.Models.Cfdi.VEncFacturaProvSaldo item in Model)
        {
            <tr>
                <td>@item.ID</td>
                <td>
                    @if (item.Estado == "A")
                    {
                        <a><span class="fa fa-check-circle" style="font-size:16px;color:green"></span></a>
                        if (item.pagada == true)
                        {
                            <a><span class="fa fa-check-circle" style="font-size:16px;color:blueviolet"></span></a>
                        }
                    }
                    else
                    {
                        <a><span class="fa fa-times-circle" style="font-size:16px;color:red"></span></a>
                    }


                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Serie)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Numero)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Fecha)
                </td>
                <td>
                    @{ try
                        {
                            SIAAPI.Models.Cfdi.FechaSubFacturaP subFacturaP = new SIAAPI.Models.Cfdi.FechaSubFacturaPContext().Database.SqlQuery<SIAAPI.Models.Cfdi.FechaSubFacturaP>("select*from FechaSubFacturaP where idfacturap= " + item.ID).ToList().FirstOrDefault();
                            @Html.DisplayFor(modelItem => subFacturaP.Fecha)
                        }
                        catch (Exception err)
                        {

                        }
                    }
                </td>
                <td>

                    @Html.DisplayFor(modelItem => item.Nombre_Proveedor)
                    @if (item.IDProveedor == 0)
                    {
                        <a><span class="fa fa-user-times" style="font-size:16px;color:red"></span></a>
                    }

                </td>
                <td align="right">
                    @String.Format("{0:C}", item.Subtotal)
                    @*@Html.DisplayFor(modelItem => item.Subtotal)*@
                </td>
                <td align="right">

                    @String.Format("{0:C}", item.IVA)
                    @*@Html.DisplayFor(modelItem => item.IVA)*@
                </td>
                <td align="right">
                    @String.Format("{0:C}", item.Total)
                    @*@Html.DisplayFor(modelItem => item.Total)*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Moneda)
                </td>
                @if (@Roles.IsUserInRole("Administrador") || @Roles.IsUserInRole("Sistemas") || @Roles.IsUserInRole("Gerencia") || @Roles.IsUserInRole("Compras") || @Roles.IsUserInRole("Facturacion"))
                {
                    if (item.ImportePagado == -1)
                    {
                        if (item.Estado == "A")
                        {
                            <td align="right" colspan="2">
                                Pendiente por revisar
                            </td>
                        }
                        else
                        {
                            <td align="right">
                                @String.Format("{0:C}", 0)
                            </td>
                            <td align="right">
                                @String.Format("{0:C}", 0)
                            </td>
                        }
                    }
                    else
                    {
                        <td align="right">
                            @String.Format("{0:C}", item.ImportePagado)
                        </td>


                        <td align="right">
                            @String.Format("{0:C}", item.ImporteSaldoInsoluto)
                        </td>
                    }
                }

                <td>
                    @Html.ActionLink("XML", "Descargarxml", new { id = item.ID }, new { @class = "btn btn-warning btn-xs" })
                </td>
                <td>
                    @if (string.IsNullOrEmpty(item.RutaPDF))
                    {@Html.ActionLink("Subir PDF", "SubirArchivo", new { id = item.ID }, new { @class = "btn btn-info btn-xs" })
                }
                else
                { @Html.ActionLink("PDF", "DescargarPdf", new { id = item.ID }, new { @class = "btn btn-primary btn-xs" })


            }
                </td>



                @*/////// para la fecha*@


            <td>
                @{
                    if (item.ImportePagado == -1 && item.Estado == "A")
                    {
                        @Html.ActionLink("Fecha Revisión", "FechaRevision", new { id = item.ID }, new { @class = "btn btn-warning btn-xs" })
                    }
                    else
                    {
                        @DateTime.Parse(@Html.DisplayFor(modelItem => item.FechaRevision).ToString()).ToShortDateString()

                    }

                }
            </td>




                @if (item.ConPagos == true)
                {
                    <td>
                        @Html.ActionLink("Ver Pagos", "VPagosProv", new { id = item.ID }, new { @class = "btn btn-default btn-xs" })
                    </td>
                }
                else
                {
                    <td>
                        Sin pagos
                    </td>
                }
                <td>
                    @{

                        try
                        {
                            SIAAPI.Models.Comercial.EncRecepcion recepciones = new SIAAPI.Models.Comercial.RecepcionContext().Database.SqlQuery<SIAAPI.Models.Comercial.EncRecepcion>("select * from  EncRecepcion where documentoFactura= '" + item.ID + "'").ToList().FirstOrDefault();


                            if (recepciones != null)
                            {
                                if (item.ImporteSaldoInsoluto > 0)
                                {

                                    @Html.ActionLink("Historia", "RutaPDF", new { id = item.ID }, new { @class = "btn btn-warning btn-xs" })

                                }

                            }
                        }
                        catch (Exception err)
                        {

                        }

                    }


                    @if (item.Estado == "A")
                    {
                        @Html.ActionLink("Descargar ticket ", "descargarTicket", new { id = item.ID }, new { @class = "btn btn-default btn-xs" })
                    }
                    else
                    {

                    }
                </td>

                <td>
                    @if (item.Estado == "A")
                    {
                        <a href="#" class="edit" onclick="Cancelar(@item.ID)"><span class="fa fa-ban" style="font-size:16px;color:red"></span></a>
                    }
                    else
                    {
                        <div><span class="fa fa-ban" style="font-size:16px;color:green"></div>
                    }
                </td>



            </tr>
            @*<td>
                    @Html.DisplayFor(modelItem => item.pagada)
                </td>*@
            <tr>
                @{
                    SIAAPI.Models.Cfdi.RecepcionAddContext db = new SIAAPI.Models.Cfdi.RecepcionAddContext();
                    SIAAPI.Models.Comercial.ClsDatoEntero contard = db.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoEntero>("select count(IDFactura) as dato from RecepcionAdd where IDFactura =" + item.ID).ToList().FirstOrDefault();
                    if (contard.Dato != 0)
                    {
                        List<SIAAPI.Models.Cfdi.RecepcionAdd> doctos = db.Database.SqlQuery<SIAAPI.Models.Cfdi.RecepcionAdd>("select * from RecepcionAdd where IDFactura = " + item.ID + "").ToList();
                        ViewBag.doctos = doctos;
                        foreach (SIAAPI.Models.Cfdi.RecepcionAdd b in ViewBag.doctos)
                        {
                            <td></td>
                            <td></td>
                            <td class="col-lg-2" style="font-size:x-small">
                                @Html.ActionLink(b.nombreArchivo, "DescargarPdfRec", new { id = b.ID }, new { @class = "btn btn-primary btn-xs" })
                                @Html.ActionLink(" ", "EliminarArchivoRecAd", new { id = b.ID }, new { @class = "fa fa-trash", style = "font-size:16px;color:red" })
                            </td>
                        }
                    }
                }
            </tr>

        }
    </table>
</div>
<br />
<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <th class="col-lg-1">
                Moneda Origen
            </th>
            <th class="col-lg-1">
                Subtotal
            </th>
            <th class="col-lg-1">
                IVA
            </th>
            <th class="col-lg-1">
                Total
            </th>
            <th class="col-lg-1">
                Total en Pesos Mexicanos
            </th>
        </tr>
        @foreach (var itemresumen in ViewBag.sumatoria)
        {

            <tr>
                <td class="col-lg-1">
                    @itemresumen.MonedaOrigen
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.Subtotal)
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.IVA)
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.Total)
                </td>
                <td class="col-lg-1">
                    @String.Format("{0:C}", itemresumen.TotalenPesos)
                </td>

            </tr>
        }
    </table>
</div>

@*Paginación*@
@using (Html.BeginForm("Index", "FacturaProv", FormMethod.Get, new { id = "pageSizeForm" }))
{
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("Index", new
   {
       page,
       ticket = ViewBag.TicketSeleccionado,
       Numero = ViewBag.NumeroSeleccionado,
       idProveedor = ViewBag.idProveedorSeleccionado,
       FacPag = ViewBag.FacPagseleccionado,
       Estado = ViewBag.Estadoseleccionado,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       searchString = ViewBag.CurrentFilter,
       pageSize = ViewBag.psize
   }))


    </div>
}
@*Paginación*@

<script src="~/Scripts/libs/salert/sweetalert.min.js"></script>

<script>

        $(function(){
            $("#FacPag").on("change", function() {
             @ViewBag.FacPagseleccionado=  $('[id$=FacPag] option:selected').text();

            });
        });

        $(function(){
            $("#Estado").on("change", function() {
             @ViewBag.Estadoseleccionado=  $('[id$=Estado] option:selected').text();

            });
        });
    $(function(){
        $("#IDProveedor").on("change", function() {
         @ViewBag.Proveedorseleccionado=  $('[id$=IDProveedor] option:selected').text();

        });
    });
</script>
<script>

    function Cancelar(id) {
        var urledit = '@Url.Action("cancelarFactura", "FacturaProv")';
            swal({
                title: "¿Estas seguro de cancelar?",
                text: "Esta opcion cancela la factura!",
                type: "Warning",
                buttons: true,
                dangerMode: true,
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Si, Cancelala!",
                cancelButtonText: "No, dejala!",
                closeOnConfirm: true
            }).then(function(isConfirm) {
                if (isConfirm) {

                    $.post(urledit, { id: id }, function (response) {
                        if (response) {
                            location.reload();
                            swal("La factura ha sido cancelada!","","success")

                        }
                    }).fail(function (response) {
                        swal("La factura no pudo ser cancelada!","","error")

                    })
                }
                else {
                    swal("Abortado", "Tu factura no tuvo cambios", "error");
                }
            }

          );



        }


</script>

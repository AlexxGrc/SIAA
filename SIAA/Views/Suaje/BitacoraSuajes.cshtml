@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Suajes.VBitacoraSuajes>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
    ViewBag.Title = "BitacoraSuajes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Bitacora Suajes</h3>

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <div>
                        <p>
                            Elementos por página: @Html.DropDownList("pageSize")

                            @*Status: @Html.DropDownList("Status")*@

                            Clave:@Html.TextBox("Clave", ViewBag.CurrentFilter as string, new { @placeholder = " Clave suaje" })

                            Fecha inicio: @Html.TextBox("Fechainicio", ViewBag.Fechainicio as string, new { type = "date" })
                                Fecha final:  @Html.TextBox("Fechafinal", ViewBag.Fechafinal as string, new { type = "date" })
                            <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span>
                        </p>
                    </div>

                }

            </div>
        </form>
    </div>
</nav>

<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <th>

                @Html.Label("Orden")

            </th>
            <th>
                @Html.Label("Fecha")
            </th>
            <th>
                @Html.Label("Material")
            </th>
            <th>
                @Html.Label("Ancho")
            </th>
            <th>
                @Html.Label("Mtrs Lineales")
            </th>


            <th>
                @Html.Label("Cliente")
            </th>

            <th>
                @Html.Label("Estado Orden")
            </th>

            <th>
                @Html.Label("Cyrel")
            </th>

            <th>
                @Html.Label("Tipo etiqueta")
            </th>

            <th></th>
        </tr>
        @foreach (var item in Model)
        {
            ///twermina de agregar los campos
            //
    <tr>
        <th>
            @item.IdOrden
        </th>
        <td>
            @item.FechaCreacion.ToString("dd") - @item.FechaCreacion.ToString("MM") - @item.FechaCreacion.ToString("yyyy")
        </td>
        <td>
         
                
            @{
                string cfe = "";
                decimal ancho = 0M;


                try
                {
                    SIAAPI.Models.Produccion.VMatAsignado vMat = new SIAAPI.Models.Produccion.VMatAsignadoContext().VMatAsignado.Where(s => s.Orden == item.IdOrden).FirstOrDefault();
                    cfe = vMat.Cref;
                    ancho = vMat.ancho;
                }
                catch (Exception err )
                {

                }
                }
            @cfe
        </td>
        <td>
            @ancho
        </td>
        <td>
            @{
                decimal mtsEmbo = 0;
                decimal largo = 0;
                decimal gapavance = 0;
                decimal cantidadB = 0;
                decimal alPaso = 0;
                double cyrel = 0;


                try
                {
                    SIAAPI.Models.Comercial.ClsDatoDecimal cantidadL = new SIAAPI.Models.Produccion.VMatAsignadoContext().Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoDecimal>(" select sum(cantidad) as dato from LiberaOrdenProduccion where idorden=" + item.IdOrden).ToList().FirstOrDefault();
                    cantidadB = cantidadL.Dato;
                }
                catch (Exception err)
                {

                }
                if (cantidadB > 0)
                {
                    try
                    {
                        SIAAPI.Models.Comercial.Caracteristica ARTP = new SIAAPI.Models.Comercial.ArticuloContext().Database.SqlQuery<SIAAPI.Models.Comercial.Caracteristica>("select * from Caracteristica where Id=" + item.IDCaracteristica).FirstOrDefault();
                        int idhe = ARTP.IDCotizacion;
                        SIAAPI.ClasesProduccion.Cotizaciones archivocotizacion = new SIAAPI.ClasesProduccion.ArchivoCotizadorContext().cotizaciones.Find(idhe);
                        SIAAPI.ClasesProduccion.ClsCotizador especificacion = new SIAAPI.ClasesProduccion.ClsCotizador();
                        especificacion = null;
                        try
                        {
                            System.Xml.Serialization.XmlSerializer serializerX = new System.Xml.Serialization.XmlSerializer(typeof(SIAAPI.ClasesProduccion.ClsCotizador));
                            System.Xml.XmlDocument documento = new System.Xml.XmlDocument();

                            ///Deserealización del XML COIZACION
                            try
                            {

                                string nombredearchivo = archivocotizacion.Ruta.TrimEnd() + "\\" + archivocotizacion.NombreArchivo + ".xml";
                                documento.Load(nombredearchivo);


                                using (Stream reader = new FileStream(nombredearchivo, FileMode.Open))
                                {
                                    // Call the Deserialize method to restore the object's state.
                                    especificacion = (SIAAPI.ClasesProduccion.ClsCotizador)serializerX.Deserialize(reader);
                                }
                            }
                            catch (Exception er)
                            {

                            }

                        }
                        catch (Exception err)
                        {

                        }
                        try
                        {
                            SIAAPI.Models.Produccion.OrdenProduccion orden = new SIAAPI.Models.Produccion.OrdenProduccionContext().OrdenesProduccion.Find(item.IdOrden);

                            FormulaSiaapi.Formulas FORMULA = new FormulaSiaapi.Formulas();
                            FORMULA.cadenadepresentacion = orden.Presentacion;
                            try
                            {
                                //largo = FORMULA.getvalor("LARGO", orden.Presentacion);
                                cyrel = FORMULA.getvalor("CYREL", orden.Presentacion);

                            }
                            catch
                            {

                            }
                            try
                            {
                                //largo = FORMULA.getvalor("LARGO", orden.Presentacion);
                                largo = especificacion.largoproductomm;

                            }
                            catch
                            {

                            }
                            try
                            {
                                //gapavance = FORMULA.getvalor("GAP AVANCE", orden.Presentacion);

                                gapavance = especificacion.gapavance;
                            }
                            catch
                            {

                            }
                            try
                            {
                                //alPaso = FORMULA.getvalor("AL PASO", orden.Presentacion);
                                alPaso = especificacion.productosalpaso;


                            }
                            catch
                            {

                            }
                            mtsEmbo = ((cantidadB / alPaso) * (largo + gapavance));  //// dividirlo enytre las etiquetas al paso (repeticiones al eje)

                            //mtsEmbo = ((cantidadB * (Convert.ToDecimal(largo) + Convert.ToDecimal(gapavance))) / Convert.ToDecimal(alPaso)) / 1000;  //// dividirlo enytre las etiquetas al paso (repeticiones al eje)

                        }
                        catch (Exception err)
                        {

                        }

                        //mtsEmbo = ((cantidadB * (Convert.ToDecimal(largo) + Convert.ToDecimal(gapavance))) / Convert.ToDecimal(alPaso))/1000;

                    }
                    catch (Exception err)
                    {

                    }

                }
                @Math.Round(mtsEmbo)
            }

        </td>
        <td>
            @{
                @item.Nombre
                ///material, voy a preguntar porque hay veces que corren don materiales aqui
            }
        </td>
        <td>
            @{
                @item.EstadoOrden
                ///material, voy a preguntar porque hay veces que corren don materiales aqui
            }
        </td>


        <td>
            @{if (cyrel != 0)
                {
                    @cyrel
                    <i class="fa fa-check fa-2x" aria-hidden="true"></i>
                }

                else
                {

                    <i class="fa fa-times fa-2x" aria-hidden="true"></i>
                }

            }
        </td>
        <td>

            @{//como ya obtuviste el idmodelo produccion vas a poner un if para mostrar el tipo de etiqueta, si el idmodeloproduccion = a 7 blanca y si es 8 u 4 ponones impresa color
                //@item.IDModeloProduccion
                var detalle = new SIAAPI.Models.Produccion.ArticulosProduccionContext().Database.SqlQuery<SIAAPI.Models.Produccion.ArticuloProduccion>("select art.* from Articuloproduccion as art inner join articulo as a on a.idarticulo=art.idarticulo where idorden=" + item.IdOrden + " and (a.idfamilia=14 or a.idfamilia=12  or a.idfamilia=20  or a.idfamilia=15  or a.idfamilia=16  or a.idfamilia=13  or a.idfamilia=85  or a.idfamilia=86)").ToList();

                if (item.IDModeloProduccion == 4 || item.IDModeloProduccion == 8)
                {


                    if (detalle.Count() > 0)
                    {
                        @Html.Label("Impresa Color")
                    }
                    else
                    {
                        @Html.Label("Impresa Blanca")
                    }

                }
                else if (item.IDModeloProduccion == 7)
                {
                    if (detalle.Count() > 0)
                    {
                        @Html.Label("Color")
                    }
                    else
                    {
                        @Html.Label(" Blanca")
                    }

                }
                ///agregar formula para sacar los metros lineañes
            }
        </td>

    </tr>



        }

    </table>
</div>
@using (Html.BeginForm("BitacoraSuajes", "Suaje", FormMethod.Get, new { id = "pageSizeForm" }))
{
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("BitacoraSuajes", new
   {
       page,

       currentFilter = ViewBag.CurrentFilter,
       
       pageSize = ViewBag.psize,
       clave= ViewBag.Clave,
       Fechainicio=  ViewBag.FechaInicio ,
       Fechafinal= ViewBag.FechaFin

        }))

    </div>
}
@*Paginación*@



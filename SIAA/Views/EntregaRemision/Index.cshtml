@*@model IEnumerable<SIAAPI.Models.Comercial.VEntregaR>*@

@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>

@model PagedList.IPagedList<SIAAPI.Models.Comercial.VEntregaR>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@*Paginación*@

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Title page --><h3>Remisiones de entrega de productos.</h3>
<hr />
<!-- Creating a new entry in table -->
@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <p>
                        @Html.ActionLink("Crear Entrega", "CreateEntrega", null, new { @class = "btn btn-warning btn-xs" })  |
                        Elementos por página: @Html.DropDownList("pageSize")  |
                        Filtro: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @placeholder = " Introduce el texto a buscar:" })
                        <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span>
                        @*<a class="btn btn-info btn-xs" href="@Url.Action("Reporte")">Descargar Catálogo</a>*@
                    </p>
                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@


@*<p>
    @Html.ActionLink("Crear nueva", "CreateEntrega")
</p>*@
<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <th>
                @Html.ActionLink("ID", "Index", new { sortOrder = ViewBag.ClaveSortParm, currentFilter = ViewBag.CurrentFilter })
                @*@Html.DisplayNameFor(model => model.ID)*@
            </th>
            <th>
                @Html.ActionLink("Fecha", "Index", new { sortOrder = ViewBag.ClaveSortParm, currentFilter = ViewBag.CurrentFilter })
                @*@Html.DisplayNameFor(model => model.Fecha)*@
            </th>
            <th>
                @Html.ActionLink("Chofer", "Index", new { sortOrder = ViewBag.ClaveSortParm, currentFilter = ViewBag.CurrentFilter })
                @*@Html.DisplayNameFor(model => model.Chofer)*@
            </th>
            <th>
                @Html.ActionLink("Ruta", "Index", new { sortOrder = ViewBag.ClaveSortParm, currentFilter = ViewBag.CurrentFilter })
                @*@Html.DisplayNameFor(model => model.Ruta)*@
            </th>
            <th>
                @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.ClaveSortParm, currentFilter = ViewBag.CurrentFilter })
              
            </th>
            <th>
                @Html.ActionLink("Fecha finalización", "Index", new { sortOrder = ViewBag.ClaveSortParm, currentFilter = ViewBag.CurrentFilter })
              
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            //SIAAPI.Models.Comercial.EntregaRemision entrega = new SIAAPI.Models.Comercial.EntregaRemisionesContext().Database.SqlQuery<SIAAPI.Models.Comercial.EntregaRemision>("select*from entregaRemision where ").ToList().FirstOrDefault();
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ID)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Fecha)
          
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Chofer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Ruta)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FechaFinalizacion)
        </td>
        <td>
            @*@Html.ActionLink("Editar", "Edit", new { id = item.ID }, new { @class = "btn btn-success btn-xs" }) |*@
            @Html.ActionLink("Detalles", "Details", new { IDEntrega= item.ID     }, new { @class = "btn btn-default btn-xs" })
            @{
                if (item.Status != "Finalizado")
                {
                    @Html.ActionLink("Editar", "EditEntrega", new { IDEntrega = item.ID }, new { @class = "btn btn-warning btn-xs" })

                }
            }

            @Html.ActionLink("Imprimir", "Imprimir", new { IDEntrega = item.ID }, new { @class = "btn btn-success btn-xs" })

            @{
                if (item.Status == "Activo" || item.Status == "")
                {
                    @Html.ActionLink("Finalizar", "FinalizarEntrega", new { IDEntrega = item.ID }, new { @class = "btn btn-info btn-xs" })

                }
            }
        </td>
    </tr>
        }

    </table>
    </div>
    @*Paginación*@
    @using (Html.BeginForm("Index", "EntregaRemision", FormMethod.Get, new { id = "pageSizeForm" }))
    {
        <div class="pager">
            Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

            @Model.Count de @Model.TotalItemCount elementos

            @Html.PagedListPager(Model, page => Url.Action("Index", new
   {
       page,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       searchString = ViewBag.CurrentFilter,
       pageSize = ViewBag.psize
   }))


        </div>
    }
    @*Paginación*@


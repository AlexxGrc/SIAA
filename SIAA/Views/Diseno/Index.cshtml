@*@model IEnumerable<SIAAPI.Models.Administracion.c_Banco>*@

@*Paginación*@
<script src="~/Scripts/jquery-3.2.1.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () { // Submit pageSizeForm when another pageSize value is selected
        $("#pageSize").change(function () {
            $("#pageSizeForm").submit();
        });
    });
</script>
@model PagedList.IPagedList<SIAAPI.Models.Diseno.SolicitudDiseno>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@*Paginación*@

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Solicitudes</h3>
<hr />

@*Busqueda*@
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <form class="navbar-form navbar-left">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    <p>
                        @*@Html.ActionLink("Crea un nuevo registro", "Create", null, new { @class = "btn btn-warning btn-xs" }) |*@
                        Elementos por página: @Html.DropDownList("pageSize")  |  Estado: @Html.DropDownList("Estado")  |
                        No. solicitud: @Html.TextBox("NoSolicitud", ViewBag.NoSolicitud as string, new { @placeholder = " Introduce el texto a buscar:" })

                        <div>
                            Fecha inicio: @Html.TextBox("Fechainicio", ViewBag.Fechainicio as string, new { type = "date" })
                            Fecha final:  @Html.TextBox("Fechafinal", ViewBag.Fechafinal as string, new { type = "date" })
                        </div>
                        Cyrel: @Html.TextBox("cyrel", ViewBag.cyrel as string, new { type = "text" })
                        <input type="submit" value="Aplicar" class="btn btn-primary btn-xs" /><span class="sr-only">(current)</span>
                        <a class="btn btn-info btn-xs" href="@Url.Action("VSolicitudDiseno")">Excel</a>
                    </p>
                }

            </div>
        </form>
    </div>
</nav>
<br>
@*Busqueda*@
@*Paginación*@
@using (Html.BeginForm("Index", "Diseno", FormMethod.Get, new { id = "pageSizeForm" }))
{
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("Index", new
       {
           page,
           sortOrder = ViewBag.CurrentSort,
           currentFilter = ViewBag.CurrentFilter,
           searchString = ViewBag.CurrentFilter,
           pageSize = ViewBag.psize,
           etiqueta = ViewBag.etiqueta
       }))


    </div>
}
@*Paginación*@



@*Tabla de datos*@
<div class="table-responsive">
    <table class="table table-striped" width="50">
        <tr>
            <td>
                Num
            </td>
            <td>
                Num Cotización
            </td>

            <th>
                @* @Html.DisplayNameFor(model => model.ClaveBanco)*@
                @Html.ActionLink("NR", "Index", new { sortOrder = ViewBag.ASortParm, currentFilter = ViewBag.CurrentFilter })

            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Nombre)*@
                @Html.ActionLink("Cliente", "Index", new { sortOrder = ViewBag.BSortParm, currentFilter = ViewBag.CurrentFilter })

            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.RazonSocial)*@
                @Html.ActionLink("Vendedor", "Index", new { sortOrder = ViewBag.CSortParm, currentFilter = ViewBag.CurrentFilter })

            </th>
            <td>
                Descripción
            </td>
            <th>Tipo de solicitud</th>
            <th>Tipo de etiqueta</th>
            <th>Estado</th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {

            SIAAPI.Models.Comercial.ClientesContext db = new SIAAPI.Models.Comercial.ClientesContext();
            //SIAAPI.Models.Comercial.ClsDatoString cliente = db.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoString>("select Nombre as Dato from  [Clientes] where [idCliente]=" + item.IDCliente + "").ToList().FirstOrDefault();
            SIAAPI.Models.Comercial.ClsDatoString vendedor = db.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoString>("select Nombre as Dato from  [Vendedor] where [idVendedor]=" + item.IDVendedor + "").ToList().FirstOrDefault();
            SIAAPI.Models.Comercial.ClsDatoString descripcion = db.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoString>("select Descripcion as Dato from  [Cotizaciones] where [id]=" + item.IDCotizacion + "").ToList().FirstOrDefault();


            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    <div>@Html.DisplayFor(modelItem => item.IDCotizacion)</div>
                    <div>@Html.DisplayFor(modelItem => item.Fecha)</div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumeroRevision)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cliente)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => vendedor.Dato)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => descripcion.Dato)
                </td>
                <td>
                    @{
                        string solicitudad = "";
                        if (item.TipodeSolicitud == "Diseno" || item.TipodeSolicitud == "Diseño")
                        {
                            solicitudad = "Diseño";
                        }
                        else
                        {
                            solicitudad = "Suaje";
                        }
                    }
                    @Html.DisplayFor(modelItem => solicitudad)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TipoEtiqueta)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EstadodeSolicitud)
                </td>
                <td>


                    @if (item.EstadodeSolicitud == "AUTORIZADA" || item.EstadodeSolicitud == "INICIADO" || item.EstadodeSolicitud == "TERMINADO")
                    {
                        @Html.ActionLink("Editar", "Edit", new { id = item.ID }, new { @class = "btn btn-success btn-xs" })

                    }

                    @Html.ActionLink("Detalles", "Details", new { id = item.ID }, new { @class = "btn btn-default btn-xs" })
                </td>
                <td>



                    @if (@Roles.IsUserInRole("Gerencia") || @Roles.IsUserInRole("GerenteVentas") || @Roles.IsUserInRole("Administrador"))

                    {


                        if (item.EstadodeSolicitud == "PENDIENTE")
                        {
                            @Html.ActionLink("Autorizar", "Autorizar", new { id = item.ID,
                           sortOrder = ViewBag.CurrentSort,
                           currentFilter = ViewBag.CurrentFilter,
                           searchString = ViewBag.CurrentFilter,
                           pageSize = ViewBag.psize,
                           etiqueta = ViewBag.etiqueta,
                           page = ViewBag.PageNumber,
                           
                           NoSolicitud = ViewBag.IDCotizacion,
                           Fechafinal = ViewBag.FechaF,
                           Fechainicio = ViewBag.FechaI
                       }, new { @class = "btn btn-info btn-xs" })

                            @Html.ActionLink("No Autorizar", "NoAutorizar", new { id = item.ID,
                           sortOrder = ViewBag.CurrentSort,
                           currentFilter = ViewBag.CurrentFilter,
                           searchString = ViewBag.CurrentFilter,
                           pageSize = ViewBag.psize,
                           etiqueta = ViewBag.etiqueta,
                           page= ViewBag.PageNumber,
                           
                           NoSolicitud = ViewBag.IDCotizacion,
                           Fechafinal = ViewBag.FechaF,
                           Fechainicio = ViewBag.FechaI
                       }, new { @class = "btn btn-info btn-xs" })
                        }
                    }



                    @Html.ActionLink(".", "SubirArchivoDis", new { id = item.ID }, new { @class = "fa fa-cloud-upload", style = "font-size:16px;color:darkgreen" })
                    @{
                        SIAAPI.Models.Diseno.DisenoAddContext db2 = new SIAAPI.Models.Diseno.DisenoAddContext();
                        List<SelectListItem> docto = new List<SelectListItem>();
                        SIAAPI.Models.Comercial.ClsDatoEntero contar2 = db2.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoEntero>("select count(IDDiseno) as dato from DisenoAdd where IDDiseno =" + item.ID).ToList().FirstOrDefault();
                        if (contar2.Dato != 0)
                        {
                            @Html.ActionLink(".", "EliminarArchivoDis", new { id = item.ID }, new { @class = "fa fa-cloud-download", style = "font-size:16px;color:red" })


                        }
                    }



                </td>
            </tr>







            <tr>
                @{
                    SIAAPI.Models.Diseno.DisenoAddContext dbd = new SIAAPI.Models.Diseno.DisenoAddContext();
                    SIAAPI.Models.Comercial.ClsDatoEntero contard = dbd.Database.SqlQuery<SIAAPI.Models.Comercial.ClsDatoEntero>("select count(IDDiseno) as dato from DisenoAdd where IDDiseno =" + item.ID).ToList().FirstOrDefault();
                    if (contard.Dato != 0)
                    {
                        List<SIAAPI.Models.Diseno.DisenoAdd> doctos = db.Database.SqlQuery<SIAAPI.Models.Diseno.DisenoAdd>("select * from DisenoAdd where IDDiseno = " + item.ID + "").ToList();
                        ViewBag.doctos = doctos;
                        foreach (SIAAPI.Models.Diseno.DisenoAdd b in ViewBag.doctos)
                        {
                            <td style="font-size:x-small" colspan="2">
                                @Html.ActionLink(b.nombreArchivo, "DescargarPdfDis", new { id = b.ID }, new { @class = "btn btn-primary btn-xs" })
                            </td>
                        }
                    }
                }
            </tr>

        }


    </table>
</div>
@*Paginación*@
@using (Html.BeginForm("Index", "Diseno", FormMethod.Get, new { id = "pageSizeForm" }))
{
    <div class="pager">
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount<br />

        @Model.Count de @Model.TotalItemCount elementos

        @Html.PagedListPager(Model, page => Url.Action("Index", new
   {
       page,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       searchString = ViewBag.CurrentFilter,
       pageSize = ViewBag.psize,
       PageNumber= ViewBag.PageNumber,
       etiqueta = ViewBag.etiqueta,
       NoSolicitud= ViewBag.IDCotizacion,
       Fechafinal=    ViewBag.FechaF,
       Fechainicio=ViewBag.FechaI
        }))


    </div>
}
@*Paginación*@


